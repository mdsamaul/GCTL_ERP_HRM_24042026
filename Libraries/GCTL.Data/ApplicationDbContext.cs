// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace GCTL.Data.Models
{
    public partial class GCTL_ERP_DB_DatapathContext : DbContext
    {
        partial void OnModelCreatingPartial(ModelBuilder modelBuilder)
        {
           

            modelBuilder.Entity<HmsPharmacy>(entity =>
            {
                entity.Property(p => p.AutoId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<CoreBankAccountInformation>(entity =>
            {
                entity.Property(p => p.AutoId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });
    
            modelBuilder.Entity<SalesDefBankBranchInfo>(entity =>
            {
                entity.Property(p => p.AutoId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            //modelBuilder.Entity<CoreMenuTab2>(entity =>
            //{
            //    entity.HasKey(e => e.Id);
            //   // entity.Property(p => p.Id)
            //   //.Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            //});

            modelBuilder.Entity<HmsPatientDischarge>(entity =>
            {
                entity.Property(p => p.AutoId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HmsDischargeType>(entity =>
            {
                entity.Property(p => p.AutoId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });
            modelBuilder.Entity<HmsAdmissionType>(entity =>
            {
                entity.Property(p => p.AutoId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });
 

            modelBuilder.Entity<HmsReferencePerson>(entity =>
            {
                entity.Property(p => p.AutoId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });
            modelBuilder.Entity<HmsDiscountPermittedBy>(entity =>
            {
                entity.Property(p => p.AutoId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });



            modelBuilder.Entity<HmsTestEntry>(entity =>
            {
                entity.Property(p => p.AutoId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });
            modelBuilder.Entity<HmsOutPatientPrescription>(entity =>
            {
                entity.Property(p => p.PrescriptionId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HmsTestCharge>(entity =>
            {
                entity.Property(p => p.TestChargeId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });
            modelBuilder.Entity<HmsTestSubCategory>(entity =>
            {
                entity.Property(p => p.TestSubCategoryId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });
            modelBuilder.Entity<HmsTestCategory>(entity =>
            {
                entity.Property(p => p.TestCategoryId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });


            //modelBuilder.Entity<HmsPatientRegistration>(entity =>
            //{
            //    entity.Property(p => p.PatientId)
            //   .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            //});

            modelBuilder.Entity<HmsPatientCategory>(entity =>
            {
                entity.Property(p => p.PatientCategoryId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });
            modelBuilder.Entity<HmsPatientType>(entity =>
            {
                entity.Property(p => p.PatientTypeId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });
        
            modelBuilder.Entity<HrmDefDesignation>(entity =>
            {
                entity.Property(p => p.AutoId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HrmDefDepartment>(entity =>
            {
                entity.Property(p => p.AutoId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HrmDefReligion>(entity =>
            {
                entity.Property(p => p.AutoId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });
            modelBuilder.Entity<HrmDefBloodGroup>(entity =>
            {
                entity.Property(p => p.AutoId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });
            modelBuilder.Entity<HmsDoctor>(entity =>
            {
                entity.Property(p => p.DoctorId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });
            modelBuilder.Entity<HmsDoctorWorkingPlace>(entity =>
            {
                entity.Property(p => p.AutoId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });
            modelBuilder.Entity<HmsShift>(entity =>
            {
                entity.Property(p => p.AutoId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });
            modelBuilder.Entity<HmsQualification>(entity =>
            {
                entity.Property(p => p.AutoId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HmsSpeciality>(entity =>
            {
                entity.Property(p => p.AutoId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HmsDoctorType>(entity =>
            {
                entity.Property(p => p.DoctorTypeId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<SalesDefPaymentType>(entity =>
            {
                entity.Property(p => p.Tc)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<CaDefCurrency>(entity =>
            {
                entity.Property(p => p.Tc)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<RmgProdDefUnitType>(entity =>
            {
                entity.Property(p => p.Tc)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            //modelBuilder.Entity<HrmEmployee>(entity =>
            //{
            //    entity.Property(p => p.AutoId)
            //   .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            //});

            modelBuilder.Entity<CoreUserInfo>(entity =>
            {
                // entity.Property(p => p.Id)
                //.Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });
            //
            modelBuilder.Entity<HrmAtdLeaveType>(entity =>
            {
                entity.Property(p => p.AutoId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });


            modelBuilder.Entity<HrmAtdShift>(entity =>
            {
                entity.Property(p => p.AutoId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HrmAtdCompanyWeekEnd>(entity =>
            {
                entity.Property(p => p.AutoId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HrmDefHolidayType>(entity =>
            {
                entity.Property(p => p.AutoId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HrmAtdHoliday>(entity =>
            {
                entity.Property(p => p.AutoId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HrmAttWorkingDayDeclaration>(entity =>
            {
                entity.Property(p => p.AutoId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HrmAtdAttendanceType>(entity =>
            {
                entity.Property(p => p.AutoId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HrmDefEmpType>(entity =>
            {
                entity.Property(p => p.AutoId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HrmEmployee>(entity =>
            {
                entity.Property(p => p.AutoId)
               .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<SalesDefBankInfo>(entity =>
            {
                entity.Property(p => p.AutoId)
                .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<SalesDefBankBranchInfo>(entity =>
            {
                entity.Property(p => p.AutoId)
                .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<CoreBankAccountInformation>(entity =>
            {
                entity.Property(p => p.AutoId)
                .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });
            modelBuilder.Entity<HrmEmployeeAdditionalInfo>(entity =>
            {
                entity.Property(p => p.AutoId)
                .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HrmDefDegree>(entity =>
            {
                entity.Property(p => p.AutoId)
                .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HrmDefBoardCountryName>(entity =>
            {
                entity.Property(p => p.AutoId)
                .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HrmDefExamTitle>(entity =>
            {
                entity.Property(p => p.AutoId)
                .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });
            modelBuilder.Entity<HrmDefInstitute>(entity =>
            {
                entity.Property(p => p.AutoId)
                .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HrmDefExamGroupInfo>(entity =>
            {
                entity.Property(p => p.AutoId)
                .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });
            modelBuilder.Entity<HrmEmployeeEducation>(entity =>
            {
                entity.Property(p => p.AutoId)
                .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<CoreBranch>(entity =>
            {
                entity.Property(p => p.AutoId)
                .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HrmDefDistrict>(entity =>
            {
                entity.Property(p => p.AutoId)
                .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HrmEmployeeContactInfo>(entity =>
            {
                entity.Property(p => p.AutoId)
                .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HrmDefRelationship>(entity =>
            {
                entity.Property(p => p.AutoId)
                .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HrmDefPerformance>(entity =>
            {
                entity.Property(p => p.AutoId)
                .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            //modelBuilder.Entity<HrmDefPerformance>(entity =>
            //{
            //    entity.Property(p => p.AutoId)
            //    .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            //});

            modelBuilder.Entity<HrmDefSeparationType>(entity =>
            {
                entity.Property(p => p.SeparationTypeCode)
                .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HrmDefJobTitle>(entity =>
            {
                entity.Property(p => p.AutoId)
                .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });
            modelBuilder.Entity<HrmDefGradeType>(entity =>
            {
                entity.Property(p => p.AutoId)
                .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HrmDefGrade>(entity =>
            {
                entity.Property(p => p.AutoId)
                .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HrmDefOccupation>(entity =>
            {
                entity.Property(p => p.AutoId)
                .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });


            modelBuilder.Entity<HrmEmployeeFamily>(entity =>
            {
                entity.Property(p => p.AutoId)
                .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HrmEmployeeQualification>(entity =>
            {
                entity.Property(p => p.AutoId)
                .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HrmEmployeeDocumentInfo>(entity =>
            {
                entity.Property(p => p.AutoId)
                .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HrmDefNationality>(entity =>
            {
                entity.Property(p => p.AutoId)
                .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HrmEmployeeReferenceInfo>(entity =>
            {
                entity.Property(p => p.AutoId)
                .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HrmDefCompanyInfo>(entity =>
            {
                entity.Property(p => p.AutoId)
                .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HrmEmployeeExp>(entity =>
            {
                entity.Property(p => p.AutoId)
                .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HrmSeparation>(entity =>
            {
                entity.Property(p => p.SeparationCode)
                .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

            modelBuilder.Entity<HrmDefBankAndNomineeInfo>(entity =>
            {
                entity.Property(p => p.AutoId)
                .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            });

        }
    }
}