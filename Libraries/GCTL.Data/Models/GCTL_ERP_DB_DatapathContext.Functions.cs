// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using System;
using System.Data;
using System.Linq;
using GCTL.Data.Models;

namespace GCTL.Data.Models
{
    public partial class GCTL_ERP_DB_DatapathContext
    {

        [DbFunction("fnNumberToWords", "dbo")]
        public static string fnNumberToWords(long? Number)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("SplitString", "dbo")]
        public IQueryable<SplitStringResult> SplitString(string Input, string Character)
        {
            return FromExpression(() => SplitString(Input, Character));
        }

        [DbFunction("SplitStrings", "dbo")]
        public IQueryable<SplitStringsResult> SplitStrings(string Input, string Delimiter)
        {
            return FromExpression(() => SplitStrings(Input, Delimiter));
        }

        [DbFunction("STRING_AGG", "dbo")]
        public static string STRING_AGG(string Delimiter, string Input)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("STRING_SPLIT", "dbo")]
        public IQueryable<STRING_SPLITResult> STRING_SPLIT(string Delimiter, string String)
        {
            return FromExpression(() => STRING_SPLIT(Delimiter, String));
        }

        protected void OnModelCreatingGeneratedFunctions(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<SplitStringResult>().HasNoKey();
            modelBuilder.Entity<SplitStringsResult>().HasNoKey();
            modelBuilder.Entity<STRING_SPLITResult>().HasNoKey();
        }
    }
}
