// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using GCTL.Data.Models;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace GCTL.Data.Models
{
    public partial interface IGCTL_ERP_DB_DatapathContextProcedures
    {
        Task<List<CheckCommissionResult>> CheckCommissionAsync(int? CommissionSetupDetailsId, string CategoryId, string TestChargeId, string DoctorId, string ReferenceId, string EffectiveDate, string EffectiveTo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CheckDiscountResult>> CheckDiscountAsync(int? DiscountSetupDetailsId, string CategoryId, string TestChargeId, string EffectiveDate, string EffectiveTo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CheckPaymentByMrNoResult>> CheckPaymentByMrNoAsync(string MrNo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CollectionReportResult>> CollectionReportAsync(string BillTypeId, string PatientTypeId, DateTime? FromDate, DateTime? ToDate, string DoctorId, string ReferenceId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CollectionReportForUserResult>> CollectionReportForUserAsync(string BillTypeId, string PatientTypeId, DateTime? FromDate, DateTime? ToDate, string DoctorId, string ReferenceId, string EmployeeId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CommissionDetailsByDoctorResult>> CommissionDetailsByDoctorAsync(string ReceiverId, string TestCategoryId, string TestChargeId, DateTime? EffectiveDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CommissionDetailsByReferenceResult>> CommissionDetailsByReferenceAsync(string ReceiverId, string TestCategoryId, string TestChargeId, DateTime? EffectiveDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DoctorCommissionReportResult>> DoctorCommissionReportAsync(string CommissionReceiver, string CommissionReceiverId, DateTime? FromDate, DateTime? ToDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DoctorCommissionSummaryResult>> DoctorCommissionSummaryAsync(string CommissionReceiver, string CommissionReceiverId, DateTime? FromDate, DateTime? ToDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DueCollectionReportResult>> DueCollectionReportAsync(string BillTypeId, string PatientTypeId, DateTime? FromDate, DateTime? ToDate, string DoctorId, string ReferenceId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DueCollectionReportForUserResult>> DueCollectionReportForUserAsync(string BillTypeId, string PatientTypeId, DateTime? FromDate, DateTime? ToDate, string DoctorId, string ReferenceId, string EmployeeId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DueReceiptsResult>> DueReceiptsAsync(string BillTypeId, string PatientTypeId, DateTime? FromDate, DateTime? ToDate, string DoctorId, string ReferenceId, string Role, string LUser, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<EducationalInfoReportSPResult>> EducationalInfoReportSPAsync(string DepartmentCodes, string DesignationCodes, string EmployeeCodes, string BranchCodes, string CompanyCodes, string NationalIDNO, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<EmployeeGeneralInfoReportSPResult>> EmployeeGeneralInfoReportSPAsync(string DepartmentCodes, string DesignationCodes, string EmployeeCodes, string BranchCodes, string CompanyCodes, string GenderCode, string BloodGroupCode, string NationalityCode, string ReligionCode, string MaritalStatusCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<EmployeeLoanInformationReportResult>> EmployeeLoanInformationReportAsync(string CompanyID, string EmployeeID, string LoanID, string LoanTypeID, DateTime? DateFrom, DateTime? DateTo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<EmployeeReferenceInformationReportSPResult>> EmployeeReferenceInformationReportSPAsync(string DepartmentCodes, string DesignationCodes, string EmployeeCodes, string BranchCodes, string CompanyCodes, string NationalIDNO, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAdvancePayPagedWithFilterResult>> GetAdvancePayPagedWithFilterAsync(int? PageNumber, int? PageSize, string SearchValue, string Department, string Month, string Year, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetCompanyNamesBySearchResult>> GetCompanyNamesBySearchAsync(string SearchCompanyName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetDiscountDetailsResult>> GetDiscountDetailsAsync(string TestChargeId, DateTime? FromDate, DateTime? ToDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeesByCompanyAdvanceLoanAdjustmentResult>> GetEmployeesByCompanyAdvanceLoanAdjustmentAsync(string EmployeeStatusId, string CompanyCode, string EmployeeName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeesByCompanyLoanAdjustmentResult>> GetEmployeesByCompanyLoanAdjustmentAsync(string EmployeeStatusId, string CompanyCode, string EmployeeName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetLeaveReport100Result>> GetLeaveReport100Async(DateTime? DateFrom, DateTime? DateTo, string Company, string Branch, string Department, string Employee, string LeaveFormat, string LeaveStatus, string ReportFormat, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetOfficialInfoResult>> GetOfficialInfoAsync(string DepartmentCodes, string DesignationCodes, string EmployeeCodes, string BranchCodes, string CompanyCodes, string EmployeeTypeCode, string EmploymentNatureId, string NationalId, string TinNo, string PassportNo, string DrivingLicense, string IsExpatriate, string ImmediateSup, string HOD, string ShiftCode, string EmployeeStatus, decimal? SalaryFrom, decimal? SalaryTo, DateOnly? AppointmentDateFrom, DateOnly? AppointmentDateTo, DateOnly? JoiningDatefrom, DateOnly? JoiningDateTo, DateOnly? TerminationDateFrom, DateOnly? TerminationDateTo, DateOnly? ProbationDateFrom, DateOnly? ProbationDateTo, DateOnly? ConfirmationDateFrom, DateOnly? ConfirmationDateTo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetTBDetailsDataResult>> GetTBDetailsDataAsync(string TBReceiveNO, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetTestRoomNoResult>> GetTestRoomNoAsync(string TestCategoryId, string TestId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PaidReceiptsResult>> PaidReceiptsAsync(string BillTypeId, string PatientTypeId, DateTime? FromDate, DateTime? ToDate, string DoctorId, string ReferenceId, string Role, string LUser, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Prc_ExcuteCustomerOnChartOfAccountAsync(string PatientCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Prc_ExcuteInvoiceWaysCollectionAsync(string PaymentReceiveID, string CustomerID, decimal? leftAmount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Prc_ExcuteReferencePersonOnChartOfAccountAsync(string ReferencePersonId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Prc_ExcuteVendorOnChartOfAccountAsync(string VendorID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Prc_Frm_TempAccountDetailsResult>> Prc_Frm_TempAccountDetailsAsync(string VoucherNo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Prc_GetAccessCodeResult>> Prc_GetAccessCodeAsync(string AccessCodeID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<prc_GetTestAmountBySubCatagoryResult>> prc_GetTestAmountBySubCatagoryAsync(string TestSubCategoryCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<prc_LederReportDateTimeFResult>> prc_LederReportDateTimeFAsync(string SubSusidiaryLedgerCodeNo, DateTime? FromDate, DateTime? ToDate, string MainCompanyCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<prc_LederReportFResult>> prc_LederReportFAsync(string SubSusidiaryLedgerCodeNo, string MainCompanyCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Prc_Load_AcountHeadResult>> Prc_Load_AcountHeadAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Prc_Load_FourthAcountHeadResult>> Prc_Load_FourthAcountHeadAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Prc_Load_ThirdAcountHeadResult>> Prc_Load_ThirdAcountHeadAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Prc_LoadGrid_Acc_SubSubsidiaryLedgerResult>> Prc_LoadGrid_Acc_SubSubsidiaryLedgerAsync(string ControlLedgerCodeNo, string SubControlLedgerCodeNo, string GeneralLedgerCodeNo, string SubsidiaryLedgerCodeNo, string SubSusidiaryLedgerCodeNo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Prc_LoadGridCompanyOpeningBalanceResult>> Prc_LoadGridCompanyOpeningBalanceAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Prc_Rpt_AccComLedgerFourthLayerResult>> Prc_Rpt_AccComLedgerFourthLayerAsync(string SubSusidiaryLedgerCodeNo, DateTime? StartDate, DateTime? EndDate, string MainCompanyCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Prc_Rpt_AccComLedgerThirdLayerResult>> Prc_Rpt_AccComLedgerThirdLayerAsync(string GeneralLedgerCodeNo, DateTime? StartDate, DateTime? EndDate, string MainCompanyCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<prc_TRGridFilerResult>> prc_TRGridFilerAsync(DateTime? FromDate, DateTime? ToDate, string BookingType, string CustomerID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<prc_VSGridFilerResult>> prc_VSGridFilerAsync(DateTime? FromDate, DateTime? ToDate, string BookingType, string CustomerID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Proc_DeleteVoucherByInvoiceAsync(string InvoiceNo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Proc_DeleteVoucherEntryFromDueCollectionAsync(string BillEntryNo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<proc_ExpenseReportResult>> proc_ExpenseReportAsync(DateTime? FromDate, DateTime? ToDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Proc_getCustomerInvoiceDueListResult>> Proc_getCustomerInvoiceDueListAsync(string CustomerID, string Main_CompanyCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Proc_getOrderListResult>> Proc_getOrderListAsync(DateTime? FromDate, DateTime? ToDate, string BookingNo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Proc_getOrderListHeaderResult>> Proc_getOrderListHeaderAsync(DateTime? FromDate, DateTime? ToDate, string BookingNo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<proc_GetPatientListForLabTestResultResult>> proc_GetPatientListForLabTestResultAsync(DateTime? FromDate, DateTime? ToDate, string DoctorCode, string ReferencePersonId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Proc_getTransportinfowithDriverResult>> Proc_getTransportinfowithDriverAsync(string BookingNo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Proc_getVendorListResult>> Proc_getVendorListAsync(string BookingNo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<proc_LabTestListNotInVoucherResult>> proc_LabTestListNotInVoucherAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<proc_Select_CL_SCL_GGL_GLAndSLAllInfoResult>> proc_Select_CL_SCL_GGL_GLAndSLAllInfoAsync(string SubSusidiaryLedgerCodeNo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Proc_VoucherEntryFromCommissionHistoryJVAsync(string Mrno, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Proc_VoucherEntryFromCommissionPaymentPVAsync(string PaymentNo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Proc_VoucherEntryFromDueCollectionForLabTestDiscountAsync(string LabTestNo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Proc_VoucherEntryFromDueCollectionForLabTestRVAsync(string LabTestNo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Proc_VoucherEntryFromDueCollectionForPatientBillDiscountAsync(string BillEntryNo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Proc_VoucherEntryFromDueCollectionForPatientBillRvAsync(string BillEntryNo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Proc_VoucherEntryFromExpensePaymentPVAsync(string ExpenseCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Proc_VoucherEntryFromInPatientBillAsync(string BillEntryNo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Proc_VoucherEntryFromIPBForRVAsync(string BillEntryNo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Proc_VoucherEntryFromLabTestAsync(string LabTestNo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Proc_VoucherEntryFromLabTestForRVAsync(string LabTestNo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ProcGetEployeeFilterDetailsResult>> ProcGetEployeeFilterDetailsAsync(string CompanyCode, string BranchCode, string DivisionCode, string DepartmentCode, string DesignationCode, string EmployeeID, string EmployeeStatus, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReferenceCommissionReportResult>> ReferenceCommissionReportAsync(string CommissionReceiver, string CommissionReceiverId, DateTime? FromDate, DateTime? ToDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReferenceCommissionSummaryResult>> ReferenceCommissionSummaryAsync(string CommissionReceiver, string CommissionReceiverId, DateTime? FromDate, DateTime? ToDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_PatientInfoResult>> Rpt_PatientInfoAsync(string patientCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_proc_BankReceiptVoucherResult>> Rpt_proc_BankReceiptVoucherAsync(string VoucherNo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_proc_BeforePLTotalCompanyTaxExpenseResult>> Rpt_proc_BeforePLTotalCompanyTaxExpenseAsync(DateTime? FromDate, string MainCompanyCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_proc_BeforePLTotalDirectExpenseResult>> Rpt_proc_BeforePLTotalDirectExpenseAsync(DateTime? FromDate, string MainCompanyCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_proc_BeforePLTotalDirectorRemunOthersExpenseResult>> Rpt_proc_BeforePLTotalDirectorRemunOthersExpenseAsync(DateTime? FromDate, string MainCompanyCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_proc_BeforePLTotalFinanceCostResult>> Rpt_proc_BeforePLTotalFinanceCostAsync(DateTime? FromDate, string MainCompanyCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_proc_BeforePLTotalGeneralAdminExpenseResult>> Rpt_proc_BeforePLTotalGeneralAdminExpenseAsync(DateTime? FromDate, string MainCompanyCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_proc_BeforePLTotalManpowercostExpenseResult>> Rpt_proc_BeforePLTotalManpowercostExpenseAsync(DateTime? FromDate, string MainCompanyCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_proc_BeforePLTotalOfficeOverheadExpenseResult>> Rpt_proc_BeforePLTotalOfficeOverheadExpenseAsync(DateTime? FromDate, string MainCompanyCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_proc_BeforePLTotalOtherIncomeResult>> Rpt_proc_BeforePLTotalOtherIncomeAsync(DateTime? FromDate, string MainCompanyCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_proc_BeforePLTotalSalesResult>> Rpt_proc_BeforePLTotalSalesAsync(DateTime? FromDate, string MainCompanyCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_proc_BSNonCurrentAssetResult>> Rpt_proc_BSNonCurrentAssetAsync(DateTime? FromDate, DateTime? ToDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_proc_BSTotalCapitalResult>> Rpt_proc_BSTotalCapitalAsync(DateTime? FromDate, DateTime? ToDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_proc_BSTotalCurrentAssetResult>> Rpt_proc_BSTotalCurrentAssetAsync(DateTime? FromDate, DateTime? ToDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_proc_BSTotalCurrentLiablitiesResult>> Rpt_proc_BSTotalCurrentLiablitiesAsync(DateTime? FromDate, DateTime? ToDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_proc_BSTotalLongLiablitiesResult>> Rpt_proc_BSTotalLongLiablitiesAsync(DateTime? FromDate, DateTime? ToDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_Proc_DueListResult>> Rpt_Proc_DueListAsync(string BillTypeId, string PatientTypeId, DateTime? FromDate, DateTime? ToDate, string DoctorId, string ReferenceId, string Role, string LUser, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_Proc_InvoiceReportResult>> Rpt_Proc_InvoiceReportAsync(string TBReceiveNO, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_Proc_OutPatientPrescriptionReportResult>> Rpt_Proc_OutPatientPrescriptionReportAsync(string patientTypeCode, string doctorCode, string ReferencePersonId, string VisitingReportingFee, DateTime? fromDate, DateTime? toDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_proc_PLTotalCompanyTaxExpenseResult>> Rpt_proc_PLTotalCompanyTaxExpenseAsync(DateTime? FromDate, DateTime? ToDate, string MainCompanyCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_proc_PLTotalDirectExpenseResult>> Rpt_proc_PLTotalDirectExpenseAsync(DateTime? FromDate, DateTime? ToDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_proc_PLTotalDirectorRemunOthersExpenseResult>> Rpt_proc_PLTotalDirectorRemunOthersExpenseAsync(DateTime? FromDate, DateTime? ToDate, string MainCompanyCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_proc_PLTotalFinanceCostResult>> Rpt_proc_PLTotalFinanceCostAsync(DateTime? FromDate, DateTime? ToDate, string MainCompanyCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_proc_PLTotalGeneralAdminExpenseResult>> Rpt_proc_PLTotalGeneralAdminExpenseAsync(DateTime? FromDate, DateTime? ToDate, string MainCompanyCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_proc_PLTotalInDirectExpenseResult>> Rpt_proc_PLTotalInDirectExpenseAsync(DateTime? FromDate, DateTime? ToDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_proc_PLTotalManpowercostExpenseResult>> Rpt_proc_PLTotalManpowercostExpenseAsync(DateTime? FromDate, DateTime? ToDate, string MainCompanyCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_proc_PLTotalOfficeOverheadExpenseResult>> Rpt_proc_PLTotalOfficeOverheadExpenseAsync(DateTime? FromDate, DateTime? ToDate, string MainCompanyCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_proc_PLTotalOtherIncomeResult>> Rpt_proc_PLTotalOtherIncomeAsync(DateTime? FromDate, DateTime? ToDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_proc_PLTotalSalesResult>> Rpt_proc_PLTotalSalesAsync(DateTime? FromDate, DateTime? ToDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_Proc_SalesCollectionResult>> Rpt_Proc_SalesCollectionAsync(string BillTypeId, string PatientTypeId, DateTime? FromDate, DateTime? ToDate, string BillStatus, string DoctorId, string ReferenceId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_Proc_SalesCollectionForUserResult>> Rpt_Proc_SalesCollectionForUserAsync(string BillTypeId, string PatientTypeId, DateTime? FromDate, DateTime? ToDate, string BillStatus, string DoctorId, string ReferenceId, string EmployeeId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_proc_TrialBalanceReportF2Result>> Rpt_proc_TrialBalanceReportF2Async(DateTime? ToDate, string MainCompanyCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_ProReceiveAndPaymentResult>> Rpt_ProReceiveAndPaymentAsync(string CompanyCode, DateTime? FromDate, DateTime? ToDate, string Role, string LUser, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Rpt_ProReceiveAndPaymentWithOutOpeningResult>> Rpt_ProReceiveAndPaymentWithOutOpeningAsync(string CompanyCode, DateTime? FromDate, DateTime? ToDate, string Role, string LUser, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SalesReportResult>> SalesReportAsync(string BillTypeId, string PatientTypeId, DateTime? FromDate, DateTime? ToDate, string DoctorId, string ReferenceId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SalesReportForUserResult>> SalesReportForUserAsync(string BillTypeId, string PatientTypeId, DateTime? FromDate, DateTime? ToDate, string DoctorId, string ReferenceId, string EmployeeId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_BackupdbAsync(string Address, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_GetEmployeesByEmployeeIDsResult>> SP_GetEmployeesByEmployeeIDsAsync(string EmployeeIDs, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_HRM_AdvancePayFilterDataResult>> SP_HRM_AdvancePayFilterDataAsync(string CompanyCodes, string BranchCodes, string DepartmentCodes, string DesignationCodes, string EmployeeIDs, string PayHeadIDs, string MonthIDs, string YearIDs, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_HRM_AdvancePayReportResult>> SP_HRM_AdvancePayReportAsync(string CompanyCodes, string BranchCodes, string DepartmentCodes, string DesignationCodes, string EmployeeIDs, string PayHeadIDs, string MonthIDs, string YearIDs, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<VoucherEntryForCollectionReceivedbankResult>> VoucherEntryForCollectionReceivedbankAsync(string CustomerID, string PaymentReceiveID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<VoucherEntryForCollectionReceivedCashResult>> VoucherEntryForCollectionReceivedCashAsync(string CustomerID, string PaymentReceiveID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<VoucherEntryForTransportApprovedResult>> VoucherEntryForTransportApprovedAsync(string CustomerID, string InvoiceNo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkingExperienceReportSPResult>> WorkingExperienceReportSPAsync(string DepartmentCodes, string DesignationCodes, string EmployeeCodes, string BranchCodes, string CompanyCodes, string NationalIDNO, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
    }
}
