// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace GCTL.Data.Models
{
    public partial class GCTL_ERP_DB_DatapathContext : DbContext
    {
        public GCTL_ERP_DB_DatapathContext()
        {
        }

        public GCTL_ERP_DB_DatapathContext(DbContextOptions<GCTL_ERP_DB_DatapathContext> options)
            : base(options)
        {
        }

        public virtual DbSet<AccCashFlowType> AccCashFlowType { get; set; }
        public virtual DbSet<AccCompanyOpeningBalance> AccCompanyOpeningBalance { get; set; }
        public virtual DbSet<AccControlLedger> AccControlLedger { get; set; }
        public virtual DbSet<AccGeneralLedger> AccGeneralLedger { get; set; }
        public virtual DbSet<AccSubControlLedger> AccSubControlLedger { get; set; }
        public virtual DbSet<AccSubSubsidiaryLedger> AccSubSubsidiaryLedger { get; set; }
        public virtual DbSet<AccSubsidiaryLedger> AccSubsidiaryLedger { get; set; }
        public virtual DbSet<AccVoucherEntry> AccVoucherEntry { get; set; }
        public virtual DbSet<AccVoucherEntryDetails> AccVoucherEntryDetails { get; set; }
        public virtual DbSet<AccVoucherType> AccVoucherType { get; set; }
        public virtual DbSet<BillGeneration> BillGeneration { get; set; }
        public virtual DbSet<CaDefCurrency> CaDefCurrency { get; set; }
        public virtual DbSet<CoreAccessCode> CoreAccessCode { get; set; }
        public virtual DbSet<CoreAccessCode2> CoreAccessCode2 { get; set; }
        public virtual DbSet<CoreAccessCode3> CoreAccessCode3 { get; set; }
        public virtual DbSet<CoreBankAccountInformation> CoreBankAccountInformation { get; set; }
        public virtual DbSet<CoreBranch> CoreBranch { get; set; }
        public virtual DbSet<CoreCompany> CoreCompany { get; set; }
        public virtual DbSet<CoreCountry> CoreCountry { get; set; }
        public virtual DbSet<CoreMeasurementUnit> CoreMeasurementUnit { get; set; }
        public virtual DbSet<CoreMenuTab> CoreMenuTab { get; set; }
        public virtual DbSet<CoreMenuTab2> CoreMenuTab2 { get; set; }
        public virtual DbSet<CoreUserInfo> CoreUserInfo { get; set; }
        public virtual DbSet<CustomerTypes> CustomerTypes { get; set; }
        public virtual DbSet<HmsAdmissionType> HmsAdmissionType { get; set; }
        public virtual DbSet<HmsBed> HmsBed { get; set; }
        public virtual DbSet<HmsBillEntry> HmsBillEntry { get; set; }
        public virtual DbSet<HmsBillEntryDetails> HmsBillEntryDetails { get; set; }
        public virtual DbSet<HmsBillType> HmsBillType { get; set; }
        public virtual DbSet<HmsChiefComplaint> HmsChiefComplaint { get; set; }
        public virtual DbSet<HmsCommissionPaymentEntry> HmsCommissionPaymentEntry { get; set; }
        public virtual DbSet<HmsCommissionPaymentHistory> HmsCommissionPaymentHistory { get; set; }
        public virtual DbSet<HmsCommissionSetup> HmsCommissionSetup { get; set; }
        public virtual DbSet<HmsCommissionSetupDetails> HmsCommissionSetupDetails { get; set; }
        public virtual DbSet<HmsDeliveryPeriod> HmsDeliveryPeriod { get; set; }
        public virtual DbSet<HmsDischargeMedicine> HmsDischargeMedicine { get; set; }
        public virtual DbSet<HmsDischargeType> HmsDischargeType { get; set; }
        public virtual DbSet<HmsDiscountPermittedBy> HmsDiscountPermittedBy { get; set; }
        public virtual DbSet<HmsDiscountSetup> HmsDiscountSetup { get; set; }
        public virtual DbSet<HmsDiscountSetupDetails> HmsDiscountSetupDetails { get; set; }
        public virtual DbSet<HmsDoctor> HmsDoctor { get; set; }
        public virtual DbSet<HmsDoctorAppointmentDays> HmsDoctorAppointmentDays { get; set; }
        public virtual DbSet<HmsDoctorType> HmsDoctorType { get; set; }
        public virtual DbSet<HmsDoctorWorkingPlace> HmsDoctorWorkingPlace { get; set; }
        public virtual DbSet<HmsExpenseEntry> HmsExpenseEntry { get; set; }
        public virtual DbSet<HmsLabTestReferenceSetup> HmsLabTestReferenceSetup { get; set; }
        public virtual DbSet<HmsLabTestReferenceSetupDetails> HmsLabTestReferenceSetupDetails { get; set; }
        public virtual DbSet<HmsLabTestResult> HmsLabTestResult { get; set; }
        public virtual DbSet<HmsLabTestResultCarriedOutBy> HmsLabTestResultCarriedOutBy { get; set; }
        public virtual DbSet<HmsLabTestResultDetails> HmsLabTestResultDetails { get; set; }
        public virtual DbSet<HmsLtrvPeriod> HmsLtrvPeriod { get; set; }
        public virtual DbSet<HmsLtrvPerson> HmsLtrvPerson { get; set; }
        public virtual DbSet<HmsLtrvUnit> HmsLtrvUnit { get; set; }
        public virtual DbSet<HmsMedicine> HmsMedicine { get; set; }
        public virtual DbSet<HmsMedicineCategory> HmsMedicineCategory { get; set; }
        public virtual DbSet<HmsMedicineDosage> HmsMedicineDosage { get; set; }
        public virtual DbSet<HmsMedicineDuration> HmsMedicineDuration { get; set; }
        public virtual DbSet<HmsMedicineManufacturer> HmsMedicineManufacturer { get; set; }
        public virtual DbSet<HmsMedicineSupplier> HmsMedicineSupplier { get; set; }
        public virtual DbSet<HmsMedicineTake> HmsMedicineTake { get; set; }
        public virtual DbSet<HmsMedicineType> HmsMedicineType { get; set; }
        public virtual DbSet<HmsNurse> HmsNurse { get; set; }
        public virtual DbSet<HmsOutPatientPrescription> HmsOutPatientPrescription { get; set; }
        public virtual DbSet<HmsPatientCategory> HmsPatientCategory { get; set; }
        public virtual DbSet<HmsPatientDischarge> HmsPatientDischarge { get; set; }
        public virtual DbSet<HmsPatientRegistration> HmsPatientRegistration { get; set; }
        public virtual DbSet<HmsPatientType> HmsPatientType { get; set; }
        public virtual DbSet<HmsPharmacy> HmsPharmacy { get; set; }
        public virtual DbSet<HmsPrescriptionDiagnosis> HmsPrescriptionDiagnosis { get; set; }
        public virtual DbSet<HmsPrescriptionMedicine> HmsPrescriptionMedicine { get; set; }
        public virtual DbSet<HmsQualification> HmsQualification { get; set; }
        public virtual DbSet<HmsReferencePerson> HmsReferencePerson { get; set; }
        public virtual DbSet<HmsRelation> HmsRelation { get; set; }
        public virtual DbSet<HmsRoom> HmsRoom { get; set; }
        public virtual DbSet<HmsRoomCost> HmsRoomCost { get; set; }
        public virtual DbSet<HmsRoomType> HmsRoomType { get; set; }
        public virtual DbSet<HmsServiceChargeGroup> HmsServiceChargeGroup { get; set; }
        public virtual DbSet<HmsServiceChargeHead> HmsServiceChargeHead { get; set; }
        public virtual DbSet<HmsShift> HmsShift { get; set; }
        public virtual DbSet<HmsSpeciality> HmsSpeciality { get; set; }
        public virtual DbSet<HmsSpecimen> HmsSpecimen { get; set; }
        public virtual DbSet<HmsTestCategory> HmsTestCategory { get; set; }
        public virtual DbSet<HmsTestCharge> HmsTestCharge { get; set; }
        public virtual DbSet<HmsTestEntry> HmsTestEntry { get; set; }
        public virtual DbSet<HmsTestEntryDetails> HmsTestEntryDetails { get; set; }
        public virtual DbSet<HmsTestSubCategory> HmsTestSubCategory { get; set; }
        public virtual DbSet<HrmAtdAttendanceType> HrmAtdAttendanceType { get; set; }
        public virtual DbSet<HrmAtdCompanyWeekEnd> HrmAtdCompanyWeekEnd { get; set; }
        public virtual DbSet<HrmAtdHoliday> HrmAtdHoliday { get; set; }
        public virtual DbSet<HrmAtdLeaveType> HrmAtdLeaveType { get; set; }
        public virtual DbSet<HrmAtdMachineData> HrmAtdMachineData { get; set; }
        public virtual DbSet<HrmAtdManual> HrmAtdManual { get; set; }
        public virtual DbSet<HrmAtdShift> HrmAtdShift { get; set; }
        public virtual DbSet<HrmAttWorkingDayDeclaration> HrmAttWorkingDayDeclaration { get; set; }
        public virtual DbSet<HrmBrand> HrmBrand { get; set; }
        public virtual DbSet<HrmDefBankAndNomineeInfo> HrmDefBankAndNomineeInfo { get; set; }
        public virtual DbSet<HrmDefBloodGroup> HrmDefBloodGroup { get; set; }
        public virtual DbSet<HrmDefBoardCountryName> HrmDefBoardCountryName { get; set; }
        public virtual DbSet<HrmDefCompanyInfo> HrmDefCompanyInfo { get; set; }
        public virtual DbSet<HrmDefCourseTitle> HrmDefCourseTitle { get; set; }
        public virtual DbSet<HrmDefDegree> HrmDefDegree { get; set; }
        public virtual DbSet<HrmDefDepartment> HrmDefDepartment { get; set; }
        public virtual DbSet<HrmDefDesignation> HrmDefDesignation { get; set; }
        public virtual DbSet<HrmDefDistrict> HrmDefDistrict { get; set; }
        public virtual DbSet<HrmDefDivision> HrmDefDivision { get; set; }
        public virtual DbSet<HrmDefEmpType> HrmDefEmpType { get; set; }
        public virtual DbSet<HrmDefEmployeeStatus> HrmDefEmployeeStatus { get; set; }
        public virtual DbSet<HrmDefExamGroupInfo> HrmDefExamGroupInfo { get; set; }
        public virtual DbSet<HrmDefExamTitle> HrmDefExamTitle { get; set; }
        public virtual DbSet<HrmDefFloor> HrmDefFloor { get; set; }
        public virtual DbSet<HrmDefGrade> HrmDefGrade { get; set; }
        public virtual DbSet<HrmDefGradeType> HrmDefGradeType { get; set; }
        public virtual DbSet<HrmDefHolidayType> HrmDefHolidayType { get; set; }
        public virtual DbSet<HrmDefInstitute> HrmDefInstitute { get; set; }
        public virtual DbSet<HrmDefJobTitle> HrmDefJobTitle { get; set; }
        public virtual DbSet<HrmDefMaritalStatus> HrmDefMaritalStatus { get; set; }
        public virtual DbSet<HrmDefNationality> HrmDefNationality { get; set; }
        public virtual DbSet<HrmDefOccupation> HrmDefOccupation { get; set; }
        public virtual DbSet<HrmDefPerformance> HrmDefPerformance { get; set; }
        public virtual DbSet<HrmDefPerformance2> HrmDefPerformance2 { get; set; }
        public virtual DbSet<HrmDefRelationship> HrmDefRelationship { get; set; }
        public virtual DbSet<HrmDefReligion> HrmDefReligion { get; set; }
        public virtual DbSet<HrmDefSeparationType> HrmDefSeparationType { get; set; }
        public virtual DbSet<HrmDefSex> HrmDefSex { get; set; }
        public virtual DbSet<HrmDefSurName> HrmDefSurName { get; set; }
        public virtual DbSet<HrmEarnLeaveEntry> HrmEarnLeaveEntry { get; set; }
        public virtual DbSet<HrmEisDefDisbursementMethod> HrmEisDefDisbursementMethod { get; set; }
        public virtual DbSet<HrmEisDefEmploymentNature> HrmEisDefEmploymentNature { get; set; }
        public virtual DbSet<HrmEisReposition> HrmEisReposition { get; set; }
        public virtual DbSet<HrmEmpDigitalSignature> HrmEmpDigitalSignature { get; set; }
        public virtual DbSet<HrmEmployee> HrmEmployee { get; set; }
        public virtual DbSet<HrmEmployee2> HrmEmployee2 { get; set; }
        public virtual DbSet<HrmEmployeeAdditionalInfo> HrmEmployeeAdditionalInfo { get; set; }
        public virtual DbSet<HrmEmployeeContactInfo> HrmEmployeeContactInfo { get; set; }
        public virtual DbSet<HrmEmployeeDocumentInfo> HrmEmployeeDocumentInfo { get; set; }
        public virtual DbSet<HrmEmployeeEducation> HrmEmployeeEducation { get; set; }
        public virtual DbSet<HrmEmployeeExp> HrmEmployeeExp { get; set; }
        public virtual DbSet<HrmEmployeeFamily> HrmEmployeeFamily { get; set; }
        public virtual DbSet<HrmEmployeeOfficialInfo> HrmEmployeeOfficialInfo { get; set; }
        public virtual DbSet<HrmEmployeePhoto> HrmEmployeePhoto { get; set; }
        public virtual DbSet<HrmEmployeeQualification> HrmEmployeeQualification { get; set; }
        public virtual DbSet<HrmEmployeeReferenceInfo> HrmEmployeeReferenceInfo { get; set; }
        public virtual DbSet<HrmEmployeeWeekendDeclaration> HrmEmployeeWeekendDeclaration { get; set; }
        public virtual DbSet<HrmIncrement> HrmIncrement { get; set; }
        public virtual DbSet<HrmItemMasterInformation> HrmItemMasterInformation { get; set; }
        public virtual DbSet<HrmLeaveApplicationDays> HrmLeaveApplicationDays { get; set; }
        public virtual DbSet<HrmLeaveApplicationEntry> HrmLeaveApplicationEntry { get; set; }
        public virtual DbSet<HrmModel> HrmModel { get; set; }
        public virtual DbSet<HrmNomineePhoto> HrmNomineePhoto { get; set; }
        public virtual DbSet<HrmNomineeSignature> HrmNomineeSignature { get; set; }
        public virtual DbSet<HrmPayAdvancePay> HrmPayAdvancePay { get; set; }
        public virtual DbSet<HrmPayLoanTypeEntry> HrmPayLoanTypeEntry { get; set; }
        public virtual DbSet<HrmPayMonth> HrmPayMonth { get; set; }
        public virtual DbSet<HrmPayPayHeadName> HrmPayPayHeadName { get; set; }
        public virtual DbSet<HrmPayTaxAdjustmentEntry> HrmPayTaxAdjustmentEntry { get; set; }
        public virtual DbSet<HrmPayrollLoan> HrmPayrollLoan { get; set; }
        public virtual DbSet<HrmPayrollPaymentReceive> HrmPayrollPaymentReceive { get; set; }
        public virtual DbSet<HrmPayrollPfassignEntry> HrmPayrollPfassignEntry { get; set; }
        public virtual DbSet<HrmRosterScheduleEntry> HrmRosterScheduleEntry { get; set; }
        public virtual DbSet<HrmSeparation> HrmSeparation { get; set; }
        public virtual DbSet<HrmSize> HrmSize { get; set; }
        public virtual DbSet<InvCatagory> InvCatagory { get; set; }
        public virtual DbSet<InvDefFactory> InvDefFactory { get; set; }
        public virtual DbSet<InvDefLocation> InvDefLocation { get; set; }
        public virtual DbSet<InvDefSupplierType> InvDefSupplierType { get; set; }
        public virtual DbSet<InvDefWarehouse> InvDefWarehouse { get; set; }
        public virtual DbSet<InvProductIssueInformation> InvProductIssueInformation { get; set; }
        public virtual DbSet<InvProductIssueInformationDetails> InvProductIssueInformationDetails { get; set; }
        public virtual DbSet<InvProductIssueInformationDetailsTemp> InvProductIssueInformationDetailsTemp { get; set; }
        public virtual DbSet<InvSalesInvoiceInfo> InvSalesInvoiceInfo { get; set; }
        public virtual DbSet<InvSalesInvoiceInfoDetails> InvSalesInvoiceInfoDetails { get; set; }
        public virtual DbSet<Logs> Logs { get; set; }
        public virtual DbSet<PaymentReceive> PaymentReceive { get; set; }
        public virtual DbSet<PaymentReceiveDetails> PaymentReceiveDetails { get; set; }
        public virtual DbSet<PosPaymentType> PosPaymentType { get; set; }
        public virtual DbSet<PosTermsCondition> PosTermsCondition { get; set; }
        public virtual DbSet<PosTrType> PosTrType { get; set; }
        public virtual DbSet<RmgProdDefUnitType> RmgProdDefUnitType { get; set; }
        public virtual DbSet<RmgPurchaseOrderReceive> RmgPurchaseOrderReceive { get; set; }
        public virtual DbSet<RmgPurchaseOrderReceiveDetails> RmgPurchaseOrderReceiveDetails { get; set; }
        public virtual DbSet<SalesContactPerson> SalesContactPerson { get; set; }
        public virtual DbSet<SalesCustomer> SalesCustomer { get; set; }
        public virtual DbSet<SalesDefBankBranchInfo> SalesDefBankBranchInfo { get; set; }
        public virtual DbSet<SalesDefBankInfo> SalesDefBankInfo { get; set; }
        public virtual DbSet<SalesDefCompanyFor> SalesDefCompanyFor { get; set; }
        public virtual DbSet<SalesDefCompanyInfo> SalesDefCompanyInfo { get; set; }
        public virtual DbSet<SalesDefDemurrageCharges> SalesDefDemurrageCharges { get; set; }
        public virtual DbSet<SalesDefDeportInfo> SalesDefDeportInfo { get; set; }
        public virtual DbSet<SalesDefDriverInformation> SalesDefDriverInformation { get; set; }
        public virtual DbSet<SalesDefPaymentMode> SalesDefPaymentMode { get; set; }
        public virtual DbSet<SalesDefPaymentTerms> SalesDefPaymentTerms { get; set; }
        public virtual DbSet<SalesDefPaymentType> SalesDefPaymentType { get; set; }
        public virtual DbSet<SalesDefPortInfo> SalesDefPortInfo { get; set; }
        public virtual DbSet<SalesDefPortType> SalesDefPortType { get; set; }
        public virtual DbSet<SalesDefPortsShadeInfo> SalesDefPortsShadeInfo { get; set; }
        public virtual DbSet<SalesDefReferenceType> SalesDefReferenceType { get; set; }
        public virtual DbSet<SalesDefTransportRate> SalesDefTransportRate { get; set; }
        public virtual DbSet<SalesDefTransportType> SalesDefTransportType { get; set; }
        public virtual DbSet<SalesSupplier> SalesSupplier { get; set; }
        public virtual DbSet<TbDefVendorInformation> TbDefVendorInformation { get; set; }
        public virtual DbSet<TblReportFormat> TblReportFormat { get; set; }
        public virtual DbSet<TbmTransportBookingReceived> TbmTransportBookingReceived { get; set; }
        public virtual DbSet<TbmTransportBookingReceivedDetails> TbmTransportBookingReceivedDetails { get; set; }
        public virtual DbSet<TbmTransportBookingReceivedReferenceDetails> TbmTransportBookingReceivedReferenceDetails { get; set; }
        public virtual DbSet<TbmTransportListDetails> TbmTransportListDetails { get; set; }
        public virtual DbSet<TbmVendorAssignDetails> TbmVendorAssignDetails { get; set; }
        public virtual DbSet<TransportItemDetails> TransportItemDetails { get; set; }
        public virtual DbSet<TransportMaterials> TransportMaterials { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.UseCollation("SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<AccCashFlowType>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__Acc_Cash__385EFE48A1D45A14");

                entity.ToTable("Acc_CashFlowType");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.CashFlowTypeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("CashFlowTypeID");

                entity.Property(e => e.CashFlowTypeName)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<AccCompanyOpeningBalance>(entity =>
            {
                entity.HasKey(e => e.ComOpeningBalanceCode)
                    .HasName("PK__Acc_Comp__2DAAD14D5C4712F1");

                entity.ToTable("Acc_Company_Opening_Balance");

                entity.Property(e => e.ComOpeningBalanceCode).HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(100)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(150)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(100)
                    .HasColumnName("LUser")
                    .IsFixedLength();

                entity.Property(e => e.MainCompanyCode)
                    .HasMaxLength(50)
                    .HasColumnName("Main_CompanyCode");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.OpeningBalance).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.OpeningDate).HasColumnType("datetime");

                entity.Property(e => e.SubSusidiaryLedgerCodeNo).HasMaxLength(50);

                entity.Property(e => e.TrType).HasMaxLength(50);

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<AccControlLedger>(entity =>
            {
                entity.HasKey(e => e.ControlLedgerCodeNo)
                    .HasName("PK__Acc_Cont__4E839A2661AD8C65");

                entity.ToTable("Acc_ControlLedger");

                entity.Property(e => e.ControlLedgerCodeNo).HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.ControlLedgerName)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(100)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(150)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(100)
                    .HasColumnName("LUser")
                    .IsFixedLength();

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.ShortName).HasMaxLength(50);
            });

            modelBuilder.Entity<AccGeneralLedger>(entity =>
            {
                entity.HasKey(e => e.GeneralLedgerCodeNo)
                    .HasName("PK__Acc_Gene__BF151D5C98E7E6A6");

                entity.ToTable("Acc_GeneralLedger");

                entity.Property(e => e.GeneralLedgerCodeNo).HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.CashFlowTypeId)
                    .HasMaxLength(50)
                    .HasColumnName("CashFlowTypeID");

                entity.Property(e => e.GeneralLedgerName)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(100)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(150)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(100)
                    .HasColumnName("LUser")
                    .IsFixedLength();

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.ShortName).HasMaxLength(50);

                entity.Property(e => e.SubControlLedgerCodeNo)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<AccSubControlLedger>(entity =>
            {
                entity.HasKey(e => e.SubControlLedgerCodeNo)
                    .HasName("PK__Acc_SubC__A54A77E63AD14222");

                entity.ToTable("Acc_SubControlLedger");

                entity.Property(e => e.SubControlLedgerCodeNo).HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.ControlLedgerCodeNo)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(100)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(150)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(100)
                    .HasColumnName("LUser")
                    .IsFixedLength();

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.ShortName).HasMaxLength(50);

                entity.Property(e => e.SubControlLedgerName)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<AccSubSubsidiaryLedger>(entity =>
            {
                entity.HasKey(e => e.SubSusidiaryLedgerCodeNo)
                    .HasName("PK__Acc_SubS__740476E1FD230E83");

                entity.ToTable("Acc_SubSubsidiaryLedger");

                entity.Property(e => e.SubSusidiaryLedgerCodeNo).HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.CashFlowTypeId)
                    .HasMaxLength(50)
                    .HasColumnName("CashFlowTypeID");

                entity.Property(e => e.CostCenterCodeNo).HasMaxLength(50);

                entity.Property(e => e.IsActive)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(100)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(150)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(100)
                    .HasColumnName("LUser")
                    .IsFixedLength();

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.OpeningBalance).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.OpeningDate).HasColumnType("datetime");

                entity.Property(e => e.ShortName).HasMaxLength(50);

                entity.Property(e => e.SubSubsidiaryLedgerName)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.SubsidiaryLedgerCodeNo)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.TrType)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<AccSubsidiaryLedger>(entity =>
            {
                entity.HasKey(e => e.SusidiaryLedgerCodeNo)
                    .HasName("PK__Acc_Subs__DFD2E1178C526C12");

                entity.ToTable("Acc_SubsidiaryLedger");

                entity.Property(e => e.SusidiaryLedgerCodeNo).HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.GeneralLedgerCodeNo)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(100)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(150)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(100)
                    .HasColumnName("LUser")
                    .IsFixedLength();

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.ShortName).HasMaxLength(50);

                entity.Property(e => e.SubsidiaryLedgerName)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<AccVoucherEntry>(entity =>
            {
                entity.HasKey(e => e.VoucherEntryAutoId)
                    .HasName("PK__POS_Sale__3214E408C4A7AF46");

                entity.ToTable("Acc_VoucherEntry");

                entity.Property(e => e.VoucherEntryAutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("VoucherEntryAutoID");

                entity.Property(e => e.ApprovedBy).HasMaxLength(50);

                entity.Property(e => e.ApprovedDateTime).HasColumnType("datetime");

                entity.Property(e => e.CheckedBy).HasMaxLength(50);

                entity.Property(e => e.CheckedDateTime).HasColumnType("datetime");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.CostCenterCodeNo).HasMaxLength(50);

                entity.Property(e => e.FinancialYear).HasMaxLength(50);

                entity.Property(e => e.InvoiceFor).HasMaxLength(50);

                entity.Property(e => e.InvoiceNo).HasMaxLength(100);

                entity.Property(e => e.IsApproved).HasMaxLength(50);

                entity.Property(e => e.IsChecked).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(100)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(150)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(100)
                    .HasColumnName("LUser")
                    .IsFixedLength();

                entity.Property(e => e.MainCompanyCode)
                    .HasMaxLength(50)
                    .HasColumnName("Main_CompanyCode");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.PeriodCodeNo).HasMaxLength(50);

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");

                entity.Property(e => e.VoucherDate).HasColumnType("datetime");

                entity.Property(e => e.VoucherNo)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.VoucherTypeCode)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("VoucherType_Code");
            });

            modelBuilder.Entity<AccVoucherEntryDetails>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__Acc_Vouc__385EFE4875F0E185");

                entity.ToTable("Acc_VoucherEntryDetails");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.AccCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ChequeDate).HasColumnType("datetime");

                entity.Property(e => e.ChequeNo).HasMaxLength(100);

                entity.Property(e => e.CreditAmount).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.DebitAmount).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Description)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(100)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(150)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(100)
                    .HasColumnName("LUser")
                    .IsFixedLength();

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.TrType)
                    .IsRequired()
                    .HasMaxLength(2);

                entity.Property(e => e.VoucherEntryAutoId)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("VoucherEntryAutoID");

                entity.Property(e => e.VoucherEntryDetailsCodeNo).HasMaxLength(50);

                entity.HasOne(d => d.VoucherEntryAuto)
                    .WithMany(p => p.AccVoucherEntryDetails)
                    .HasForeignKey(d => d.VoucherEntryAutoId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Acc_VoucherEntryDetails_v");
            });

            modelBuilder.Entity<AccVoucherType>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__Acc_Vouc__385EFE4893F49604");

                entity.ToTable("Acc_VoucherType");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.Description)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(100)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(150)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(100)
                    .HasColumnName("LUser")
                    .IsFixedLength();

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.VoucherTypeCode)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("VoucherType_Code");

                entity.Property(e => e.VoucherTypeName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("Voucher_TypeName");
            });

            modelBuilder.Entity<BillGeneration>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__BillGene__6B232965AFF1511C");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("AutoID");

                entity.Property(e => e.AdditionalCharges).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.BillNo)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.BookingAmount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.BookingNo)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.DiscountAmount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.DiscountPercent).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(90)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(150)
                    .HasColumnName("LMAC");

                entity.Property(e => e.LoginEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("LoginEmployeeID");

                entity.Property(e => e.Luser)
                    .HasMaxLength(90)
                    .HasColumnName("LUser");

                entity.Property(e => e.NetAmount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PaymentTermsId).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Remarks).HasMaxLength(50);

                entity.Property(e => e.TaxPercent).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TermsConditionId).HasMaxLength(50);

                entity.Property(e => e.VatPercent).HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<CaDefCurrency>(entity =>
            {
                entity.HasKey(e => e.CurrencyId);

                entity.ToTable("CA_Def_Currency");

                entity.Property(e => e.CurrencyId).HasMaxLength(50);

                entity.Property(e => e.CurrencyName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.NegativeFormat)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ShortName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Symbol)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Tc)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TC");
            });

            modelBuilder.Entity<CoreAccessCode>(entity =>
            {
                entity.HasKey(e => e.AccessId)
                    .HasName("PK__Core_Acc__4130D05F601B5F07");

                entity.ToTable("Core_AccessCode");

                entity.Property(e => e.AccessCodeId).HasMaxLength(50);

                entity.Property(e => e.ControllerName).HasMaxLength(100);

                entity.Property(e => e.Icon).HasMaxLength(50);

                entity.Property(e => e.MenuId).HasMaxLength(50);

                entity.Property(e => e.MenuText).HasMaxLength(100);

                entity.Property(e => e.OrderBy).HasDefaultValueSql("((1))");

                entity.Property(e => e.ParentId).HasMaxLength(100);

                entity.Property(e => e.Title).HasMaxLength(250);

                entity.Property(e => e.ViewName).HasMaxLength(100);
            });

            modelBuilder.Entity<CoreAccessCode2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Core_AccessCode2");

                entity.Property(e => e.AccessCodeId)
                    .HasMaxLength(50)
                    .HasColumnName("AccessCodeID");

                entity.Property(e => e.AccessId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("AccessID");

                entity.Property(e => e.ChkAdd)
                    .HasMaxLength(10)
                    .HasColumnName("chkAdd");

                entity.Property(e => e.ChkDelete)
                    .HasMaxLength(10)
                    .HasColumnName("chkDelete");

                entity.Property(e => e.ChkEdit)
                    .HasMaxLength(10)
                    .HasColumnName("chkEdit");

                entity.Property(e => e.ChkPrint)
                    .HasMaxLength(10)
                    .HasColumnName("chkPrint");

                entity.Property(e => e.ControllerName).HasMaxLength(100);

                entity.Property(e => e.Icon).HasMaxLength(50);

                entity.Property(e => e.MenuId).HasMaxLength(50);

                entity.Property(e => e.MenuText).HasMaxLength(100);

                entity.Property(e => e.OrderBy).HasMaxLength(50);

                entity.Property(e => e.ParentId)
                    .HasMaxLength(100)
                    .HasColumnName("ParentID");

                entity.Property(e => e.Title)
                    .HasMaxLength(250)
                    .HasColumnName("title");

                entity.Property(e => e.TitleCheck).HasMaxLength(10);

                entity.Property(e => e.ViewName).HasMaxLength(100);
            });

            modelBuilder.Entity<CoreAccessCode3>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Core_AccessCode3");

                entity.Property(e => e.AccessCodeId)
                    .HasMaxLength(50)
                    .HasColumnName("AccessCodeID");

                entity.Property(e => e.AccessId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("AccessID");

                entity.Property(e => e.ChkAdd)
                    .HasMaxLength(10)
                    .HasColumnName("chkAdd");

                entity.Property(e => e.ChkDelete)
                    .HasMaxLength(10)
                    .HasColumnName("chkDelete");

                entity.Property(e => e.ChkEdit)
                    .HasMaxLength(10)
                    .HasColumnName("chkEdit");

                entity.Property(e => e.ChkPrint)
                    .HasMaxLength(10)
                    .HasColumnName("chkPrint");

                entity.Property(e => e.ControllerName).HasMaxLength(100);

                entity.Property(e => e.Icon).HasMaxLength(50);

                entity.Property(e => e.MenuId).HasMaxLength(50);

                entity.Property(e => e.MenuText).HasMaxLength(100);

                entity.Property(e => e.OrderBy).HasMaxLength(50);

                entity.Property(e => e.ParentId)
                    .HasMaxLength(100)
                    .HasColumnName("ParentID");

                entity.Property(e => e.Title)
                    .HasMaxLength(250)
                    .HasColumnName("title");

                entity.Property(e => e.TitleCheck).HasMaxLength(10);

                entity.Property(e => e.ViewName).HasMaxLength(100);
            });

            modelBuilder.Entity<CoreBankAccountInformation>(entity =>
            {
                entity.HasKey(e => e.AccInfoId)
                    .HasName("PK__Core_Ban__7DC1C2FF60056628");

                entity.ToTable("Core_BankAccountInformation");

                entity.Property(e => e.AccInfoId)
                    .HasMaxLength(50)
                    .HasColumnName("AccInfoID");

                entity.Property(e => e.AccountName)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(250)
                    .HasColumnName("AccountNO");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.BankId)
                    .HasMaxLength(50)
                    .HasColumnName("BankID");

                entity.Property(e => e.BranchId)
                    .HasMaxLength(50)
                    .HasColumnName("BranchID");

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<CoreBranch>(entity =>
            {
                entity.HasKey(e => e.BranchCode)
                    .HasName("PK__Core_Bra__1C61B889A4FB5C11");

                entity.ToTable("Core_Branch");

                entity.Property(e => e.BranchCode).HasMaxLength(50);

                entity.Property(e => e.Address).HasMaxLength(250);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.BanglaBranch).HasMaxLength(100);

                entity.Property(e => e.BranchName)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Email).HasMaxLength(50);

                entity.Property(e => e.Fax).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.Phone).HasMaxLength(50);
            });

            modelBuilder.Entity<CoreCompany>(entity =>
            {
                entity.HasKey(e => e.CompanyCode)
                    .HasName("PK__Core_Com__11A0134AC2657DB3");

                entity.ToTable("Core_Company");

                entity.Property(e => e.CompanyCode).HasMaxLength(10);

                entity.Property(e => e.BaseCurrency).HasMaxLength(150);

                entity.Property(e => e.City).HasMaxLength(150);

                entity.Property(e => e.CompanyBanglaName).HasMaxLength(500);

                entity.Property(e => e.CompanyName).HasMaxLength(300);

                entity.Property(e => e.CompanyShortName).HasMaxLength(50);

                entity.Property(e => e.Email).HasMaxLength(150);

                entity.Property(e => e.Fax).HasMaxLength(100);

                entity.Property(e => e.HotLine).HasMaxLength(150);

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(100)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(150)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(100)
                    .HasColumnName("LUser")
                    .IsFixedLength();

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.Phone1).HasMaxLength(150);

                entity.Property(e => e.Phone2).HasMaxLength(100);

                entity.Property(e => e.RegNo).HasMaxLength(100);

                entity.Property(e => e.State).HasMaxLength(150);

                entity.Property(e => e.Tin)
                    .HasMaxLength(150)
                    .HasColumnName("TIN");

                entity.Property(e => e.Url).HasColumnName("URL");

                entity.Property(e => e.ZipCode).HasMaxLength(200);
            });

            modelBuilder.Entity<CoreCountry>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Core_Country");

                entity.Property(e => e.CountryCode).ValueGeneratedOnAdd();

                entity.Property(e => e.CountryId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CountryID");

                entity.Property(e => e.CountryName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Ioccode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IOCCode");

                entity.Property(e => e.Isocode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ISOCode");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(100)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(100)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(100)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<CoreMeasurementUnit>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__Core_Mea__6B232905B6B4379A");

                entity.ToTable("Core_MeasurementUnit");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.ShortName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UnitId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UnitName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UnitType)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CoreMenuTab>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Core_MenuTab");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.MenuId)
                    .HasMaxLength(50)
                    .HasColumnName("MenuID");

                entity.Property(e => e.OrderBy).HasMaxLength(50);

                entity.Property(e => e.PageUrl).HasMaxLength(255);

                entity.Property(e => e.ParentId)
                    .HasMaxLength(50)
                    .HasColumnName("ParentID");

                entity.Property(e => e.Title)
                    .HasMaxLength(255)
                    .HasColumnName("title");
            });

            modelBuilder.Entity<CoreMenuTab2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Core_MenuTab2");

                entity.Property(e => e.AutoId).ValueGeneratedOnAdd();

                entity.Property(e => e.ControllerName).HasMaxLength(100);

                entity.Property(e => e.Icon).HasMaxLength(50);

                entity.Property(e => e.MenuId).HasMaxLength(50);

                entity.Property(e => e.OrderBy).HasDefaultValueSql("((1))");

                entity.Property(e => e.ParentId).HasMaxLength(100);

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.ViewName).HasMaxLength(100);
            });

            modelBuilder.Entity<CoreUserInfo>(entity =>
            {
                entity.ToTable("Core_UserInfo");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AccessCode).HasMaxLength(250);

                entity.Property(e => e.AccessPermissionBranchCode).HasColumnName("AccessPermission_BranchCode");

                entity.Property(e => e.AccessPermissionCompanyCode).HasColumnName("AccessPermission_CompanyCode");

                entity.Property(e => e.AccessPermissionDivisionCode).HasColumnName("AccessPermission_DivisionCode");

                entity.Property(e => e.AccessPermissionJobTitle)
                    .HasMaxLength(50)
                    .HasColumnName("AccessPermission_JobTitle");

                entity.Property(e => e.Dob)
                    .HasColumnType("datetime")
                    .HasColumnName("DOB");

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(100)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.EntryDate).HasColumnType("smalldatetime");

                entity.Property(e => e.FirstName).HasMaxLength(100);

                entity.Property(e => e.LastName).HasMaxLength(100);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(150)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(250)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(250)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.OffEmail).HasMaxLength(150);

                entity.Property(e => e.OffPhone).HasMaxLength(50);

                entity.Property(e => e.Password).HasColumnName("password");

                entity.Property(e => e.PerEmail).HasMaxLength(150);

                entity.Property(e => e.PerPhone).HasMaxLength(50);

                entity.Property(e => e.Regulation).HasMaxLength(50);

                entity.Property(e => e.Role).HasMaxLength(50);

                entity.Property(e => e.SingleSession).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Token).HasMaxLength(500);

                entity.Property(e => e.Type).HasMaxLength(250);

                entity.Property(e => e.Username)
                    .HasMaxLength(250)
                    .HasColumnName("username");

                entity.Property(e => e.WorkStation).HasMaxLength(250);
            });

            modelBuilder.Entity<CustomerTypes>(entity =>
            {
                entity.HasKey(e => e.CustomerTypeId)
                    .HasName("PK__Customer__958B61ACA926FD9F");

                entity.HasIndex(e => e.CusTypeCode, "UQ_CustomerType_CusTypeCode")
                    .IsUnique();

                entity.Property(e => e.CusTypeCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CustomerTypeName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<HmsAdmissionType>(entity =>
            {
                entity.HasKey(e => e.AdmissionTypeId)
                    .HasName("PK__HMS_Admi__05B4DAAD982E9474");

                entity.ToTable("HMS_AdmissionType");

                entity.Property(e => e.AdmissionTypeId).HasMaxLength(50);

                entity.Property(e => e.AdmissionTypeName).HasMaxLength(50);

                entity.Property(e => e.AutoId).ValueGeneratedOnAdd();

                entity.Property(e => e.BanglaShortName).HasMaxLength(100);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.ShortName).HasMaxLength(25);
            });

            modelBuilder.Entity<HmsBed>(entity =>
            {
                entity.HasKey(e => e.BedCode)
                    .HasName("PK_Bed");

                entity.ToTable("HMS_Bed");

                entity.Property(e => e.BedCode).HasMaxLength(50);

                entity.Property(e => e.BedId).ValueGeneratedOnAdd();

                entity.Property(e => e.BedNo).HasMaxLength(50);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.RoomCode)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<HmsBillEntry>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HMS_Bill__6B232905CD3CD264");

                entity.ToTable("HMS_BillEntry");

                entity.Property(e => e.Advance).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.AfterDiscountAmount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ApprovedDateTime).HasColumnType("datetime");

                entity.Property(e => e.ApprovedEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("Approved_EmployeeID");

                entity.Property(e => e.BillEntryDateTime).HasColumnType("datetime");

                entity.Property(e => e.BillEntryNo)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.BillEntryType)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.BillStatus).HasMaxLength(50);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.DiscountAmount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.DiscountPercent).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Due).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.DuePaymentDate).HasColumnType("datetime");

                entity.Property(e => e.DuePaymentModeId).HasMaxLength(50);

                entity.Property(e => e.DueReceived).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IsApproved).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Less).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Lip)
                    .HasMaxLength(90)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(150)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(90)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.NetAmount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PatientCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentModeId).HasMaxLength(50);

                entity.Property(e => e.RegistrationId).HasMaxLength(50);

                entity.Property(e => e.Remarks).HasMaxLength(50);

                entity.Property(e => e.TaxAmount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TaxPercent).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TermsConditionId).HasMaxLength(50);

                entity.Property(e => e.TotalAmount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.VatAmount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.VatPercent).HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<HmsBillEntryDetails>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HMS_Bill__EC503F2E36F2C004");

                entity.ToTable("HMS_BillEntryDetails");

                entity.Property(e => e.AfterDiscountAmount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Amount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.BillEntryNo)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DiscountAmount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.DiscountPercent).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Luser)
                    .HasMaxLength(90)
                    .HasColumnName("LUser");

                entity.Property(e => e.Rate).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ServiceChargeGroupId).HasMaxLength(50);

                entity.Property(e => e.ServiceChargeHeadId).HasMaxLength(50);
            });

            modelBuilder.Entity<HmsBillType>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HMS_Bill__6B2329051B570B85");

                entity.ToTable("HMS_BillType");

                entity.Property(e => e.BanglaShortName).HasMaxLength(100);

                entity.Property(e => e.BillTypeId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.BillTypeName).HasMaxLength(50);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<HmsChiefComplaint>(entity =>
            {
                entity.HasKey(e => e.ComplaintCode)
                    .HasName("PK_ChiefComplaintCode");

                entity.ToTable("HMS_ChiefComplaint");

                entity.Property(e => e.ComplaintCode).HasMaxLength(50);

                entity.Property(e => e.ComplaintId).ValueGeneratedOnAdd();

                entity.Property(e => e.ComplaintName).HasMaxLength(100);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.PrescriptionCode)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<HmsCommissionPaymentEntry>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HMS_Comm__6B232905A61FF78B");

                entity.ToTable("HMS_CommissionPaymentEntry");

                entity.Property(e => e.BankId).HasMaxLength(50);

                entity.Property(e => e.BkashNo).HasMaxLength(50);

                entity.Property(e => e.ChequeDate).HasColumnType("datetime");

                entity.Property(e => e.ChequeNo).HasMaxLength(50);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(90)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(150)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(90)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.PaidAmount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PaidBy).HasMaxLength(50);

                entity.Property(e => e.PartialPaidAmount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PartialPaidId).HasMaxLength(50);

                entity.Property(e => e.PaymentDateTime).HasColumnType("datetime");

                entity.Property(e => e.PaymentHistoryId).HasMaxLength(150);

                entity.Property(e => e.PaymentModeId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentNo)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.PaymentTypeId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Receiver).HasMaxLength(50);

                entity.Property(e => e.ReceiverId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ReceiverName).HasMaxLength(250);

                entity.Property(e => e.Remarks).HasMaxLength(50);

                entity.Property(e => e.TransferBankAccount).HasMaxLength(50);

                entity.Property(e => e.TransferredBankFrom).HasMaxLength(50);

                entity.Property(e => e.TransferredBankTo).HasMaxLength(50);
            });

            modelBuilder.Entity<HmsCommissionPaymentHistory>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HMS_Comm__6B2329057AB4F4A9");

                entity.ToTable("HMS_CommissionPaymentHistory");

                entity.Property(e => e.CommissionAmount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.CommissionPercent).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.DiscountedAmount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Due).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(90)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(150)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(90)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.MrdateTime)
                    .HasColumnType("datetime")
                    .HasColumnName("MRDateTime");

                entity.Property(e => e.Mrno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("MRNo");

                entity.Property(e => e.Paid).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PatientId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.PatientName).HasMaxLength(250);

                entity.Property(e => e.Payable).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PaymentStatus).HasMaxLength(100);

                entity.Property(e => e.Receiver).HasMaxLength(50);

                entity.Property(e => e.ReceiverId).HasMaxLength(50);

                entity.Property(e => e.Remarks).HasMaxLength(50);

                entity.Property(e => e.TestAmount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TestCategory)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.TestName)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<HmsCommissionSetup>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HMS_Comm__6B23290555A8FF28");

                entity.ToTable("HMS_CommissionSetup");

                entity.Property(e => e.CommissionReceiver)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CommissionSetupDateTime).HasColumnType("datetime");

                entity.Property(e => e.CommissionSetupId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.DepartmentId).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(90)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(150)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(90)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<HmsCommissionSetupDetails>(entity =>
            {
                entity.HasKey(e => e.CommissionSetupDetailsId)
                    .HasName("PK__HMS_Comm__014D13D0F2288054");

                entity.ToTable("HMS_CommissionSetupDetails");

                entity.Property(e => e.CommissionAmount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.CommissionPercent).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.CommissionSetupId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.EffectiveFrom).HasColumnType("datetime");

                entity.Property(e => e.EffectiveTo).HasColumnType("datetime");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(90)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(150)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(90)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.TestCategoryId).HasMaxLength(50);
            });

            modelBuilder.Entity<HmsDeliveryPeriod>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HMS_Deli__6B2329050CD9871E");

                entity.ToTable("HMS_DeliveryPeriod");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.DeliveryPeriod)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DeliveryPeriodId).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(90)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(150)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(90)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.ShortName).HasMaxLength(50);
            });

            modelBuilder.Entity<HmsDischargeMedicine>(entity =>
            {
                entity.HasKey(e => e.DischargeMedicineId);

                entity.ToTable("HMS_DischargeMedicine");

                entity.Property(e => e.DischargeId).HasMaxLength(50);

                entity.Property(e => e.DosageCode).HasMaxLength(50);

                entity.Property(e => e.Duration).HasMaxLength(50);

                entity.Property(e => e.DurationCode).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.MedicineCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.TakeCode).HasMaxLength(50);

                entity.Property(e => e.TakeTime).HasMaxLength(50);

                entity.Property(e => e.TakeUnit).HasMaxLength(50);
            });

            modelBuilder.Entity<HmsDischargeType>(entity =>
            {
                entity.HasKey(e => e.DischargeTypeId)
                    .HasName("PK__HMS_Disc__7909E8383E577A4D");

                entity.ToTable("HMS_DischargeType");

                entity.Property(e => e.DischargeTypeId).HasMaxLength(50);

                entity.Property(e => e.AutoId).ValueGeneratedOnAdd();

                entity.Property(e => e.BanglaShortName).HasMaxLength(100);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.DischargeTypeName).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.ShortName).HasMaxLength(25);
            });

            modelBuilder.Entity<HmsDiscountPermittedBy>(entity =>
            {
                entity.HasKey(e => e.DiscountPermittedById)
                    .HasName("PK__HMS_Disc__164D23CCDD2E329D");

                entity.ToTable("HMS_DiscountPermittedBy");

                entity.Property(e => e.DiscountPermittedById)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DiscountPermittedByID");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("AutoID");

                entity.Property(e => e.DiscountPermittedByName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.ShortName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<HmsDiscountSetup>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HMS_Disc__6B2329053DBD3FBE");

                entity.ToTable("HMS_DiscountSetup");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.DiscountSetupDateTime).HasColumnType("datetime");

                entity.Property(e => e.DiscountSetupId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(90)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(150)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(90)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<HmsDiscountSetupDetails>(entity =>
            {
                entity.HasKey(e => e.DiscountSetupDetailsId)
                    .HasName("PK__HMS_Disc__1668A08DAE8F023E");

                entity.ToTable("HMS_DiscountSetupDetails");

                entity.Property(e => e.DiscountAmount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.DiscountPercent).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.DiscountSetupId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.EffectiveFrom).HasColumnType("datetime");

                entity.Property(e => e.EffectiveTo).HasColumnType("datetime");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(90)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(150)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(90)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.TestCategoryId).HasMaxLength(50);
            });

            modelBuilder.Entity<HmsDoctor>(entity =>
            {
                entity.HasKey(e => e.DoctorCode)
                    .HasName("PK_Doctors");

                entity.ToTable("HMS_Doctor");

                entity.Property(e => e.DoctorCode).HasMaxLength(50);

                entity.Property(e => e.ActivityStatus).HasMaxLength(50);

                entity.Property(e => e.BanglaDoctorName).HasMaxLength(300);

                entity.Property(e => e.BloodGroupCode).HasMaxLength(50);

                entity.Property(e => e.BmdcregNo)
                    .HasMaxLength(50)
                    .HasColumnName("BMDCRegNo");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.DateOfBirth).HasColumnType("smalldatetime");

                entity.Property(e => e.DepartmentCode).HasMaxLength(50);

                entity.Property(e => e.DesignationCode).HasMaxLength(50);

                entity.Property(e => e.DoctorId).ValueGeneratedOnAdd();

                entity.Property(e => e.DoctorName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DoctorTypeCode).HasMaxLength(50);

                entity.Property(e => e.Email).HasMaxLength(70);

                entity.Property(e => e.JoiningDate).HasColumnType("smalldatetime");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.NationalIdNo).HasMaxLength(50);

                entity.Property(e => e.PermanentAddress).HasMaxLength(255);

                entity.Property(e => e.Phone).HasMaxLength(15);

                entity.Property(e => e.PresentAddress).HasMaxLength(255);

                entity.Property(e => e.QualificationCode).HasMaxLength(50);

                entity.Property(e => e.ReligionCode).HasMaxLength(50);

                entity.Property(e => e.ReportShowingFee).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Salary).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.SecondVisitingFee).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.SexCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ShiftCode).HasMaxLength(50);

                entity.Property(e => e.SpecialityCode).HasMaxLength(50);

                entity.Property(e => e.VisitingFee).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.WorkingPlaceCode).HasMaxLength(50);
            });

            modelBuilder.Entity<HmsDoctorAppointmentDays>(entity =>
            {
                entity.HasKey(e => e.AppointmentCode)
                    .HasName("PK__HMS_Doct__F67FE26E0E0773D2");

                entity.ToTable("HMS_DoctorAppointmentDays");

                entity.Property(e => e.AppointmentCode).HasMaxLength(50);

                entity.Property(e => e.AppointmentDays).HasMaxLength(50);

                entity.Property(e => e.AppointmentId).ValueGeneratedOnAdd();

                entity.Property(e => e.DoctorCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<HmsDoctorType>(entity =>
            {
                entity.HasKey(e => e.DoctorTypeCode)
                    .HasName("PK_DoctorType");

                entity.ToTable("HMS_DoctorType");

                entity.Property(e => e.DoctorTypeCode).HasMaxLength(50);

                entity.Property(e => e.BanglaShortName).HasMaxLength(100);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.DoctorTypeId).ValueGeneratedOnAdd();

                entity.Property(e => e.DoctorTypeName).HasMaxLength(50);

                entity.Property(e => e.DoctorTypeShortName).HasMaxLength(25);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<HmsDoctorWorkingPlace>(entity =>
            {
                entity.HasKey(e => e.WorkingPlaceCode);

                entity.ToTable("HMS_DoctorWorkingPlace");

                entity.Property(e => e.WorkingPlaceCode).HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.WorkingPlaceShortName).HasMaxLength(50);
            });

            modelBuilder.Entity<HmsExpenseEntry>(entity =>
            {
                entity.HasKey(e => e.ExpenseCode)
                    .HasName("PK_ExpenseEntry");

                entity.ToTable("HMS_ExpenseEntry");

                entity.Property(e => e.ExpenseCode).HasMaxLength(50);

                entity.Property(e => e.Amount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.AutoId).ValueGeneratedOnAdd();

                entity.Property(e => e.BankAccountNo).HasMaxLength(50);

                entity.Property(e => e.BkashNo).HasMaxLength(50);

                entity.Property(e => e.ChequeDate).HasColumnType("datetime");

                entity.Property(e => e.ChequeNo).HasMaxLength(50);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.ExpenseDate).HasColumnType("datetime");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.PaymentMode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.SubSusidiaryLedgerCodeNo)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.TransferBankFrom).HasMaxLength(50);

                entity.Property(e => e.TransferBankTo).HasMaxLength(50);
            });

            modelBuilder.Entity<HmsLabTestReferenceSetup>(entity =>
            {
                entity.HasKey(e => e.LabTestReferenceId)
                    .HasName("PK__HMS_LabT__662655FABCDCBA75");

                entity.ToTable("HMS_LabTestReferenceSetup");

                entity.Property(e => e.LabTestReferenceId).HasMaxLength(50);

                entity.Property(e => e.AutoId).ValueGeneratedOnAdd();

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(90)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(150)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(90)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.Remarks).HasMaxLength(50);

                entity.Property(e => e.TestCategoryId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.TestChargeId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.TestSubCategoryId).HasMaxLength(50);
            });

            modelBuilder.Entity<HmsLabTestReferenceSetupDetails>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HMS_LabT__6B232905890E9372");

                entity.ToTable("HMS_LabTestReferenceSetupDetails");

                entity.Property(e => e.AgeFrom).HasMaxLength(50);

                entity.Property(e => e.AgeTo).HasMaxLength(50);

                entity.Property(e => e.LabTestReferenceId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Luser)
                    .HasMaxLength(90)
                    .HasColumnName("LUser");

                entity.Property(e => e.PeriodId).HasMaxLength(50);

                entity.Property(e => e.PersonId).HasMaxLength(50);

                entity.Property(e => e.RangeFrom).HasMaxLength(50);

                entity.Property(e => e.RangeTo).HasMaxLength(50);

                entity.Property(e => e.UnitId).HasMaxLength(50);
            });

            modelBuilder.Entity<HmsLabTestResult>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HMS_LabT__6B23290559C6051B");

                entity.ToTable("HMS_LabTestResult");

                entity.Property(e => e.CarriedOutById).HasMaxLength(50);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.DeliveryDate).HasColumnType("datetime");

                entity.Property(e => e.LabTestNo)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(90)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(150)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(90)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.PatientCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.PreparedBy).HasMaxLength(90);

                entity.Property(e => e.RegistrationId).HasMaxLength(50);

                entity.Property(e => e.Remarks).HasMaxLength(50);

                entity.Property(e => e.ReportDateTime).HasColumnType("datetime");

                entity.Property(e => e.ReportNo)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.SpecimenId).HasMaxLength(50);
            });

            modelBuilder.Entity<HmsLabTestResultCarriedOutBy>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HMS_LabT__6B2329057FA6EAE3");

                entity.ToTable("HMS_LabTestResultCarriedOutBy");

                entity.Property(e => e.CarriedOutBy)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CarriedOutById).HasMaxLength(50);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(90)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(150)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(90)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.TestCategoryCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.TestChargeCode).IsRequired();

                entity.Property(e => e.TestSubCategoryCode).HasMaxLength(50);
            });

            modelBuilder.Entity<HmsLabTestResultDetails>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HMS_LabT__6B23290551ECC29A");

                entity.ToTable("HMS_LabTestResultDetails");

                entity.Property(e => e.DeliveryDate).HasColumnType("smalldatetime");

                entity.Property(e => e.LabTestId).HasMaxLength(50);

                entity.Property(e => e.Luser)
                    .HasMaxLength(90)
                    .HasColumnName("LUser");

                entity.Property(e => e.Remarks).HasMaxLength(200);

                entity.Property(e => e.ReportNo)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Result).HasMaxLength(200);

                entity.Property(e => e.TestCategoryCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.TestChargeCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Unitid).HasMaxLength(50);
            });

            modelBuilder.Entity<HmsLtrvPeriod>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HMS_LTRV__6B232905DB494D56");

                entity.ToTable("HMS_LTRV_Period");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.PeriodId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.PeriodName).HasMaxLength(50);

                entity.Property(e => e.ShortName).HasMaxLength(25);
            });

            modelBuilder.Entity<HmsLtrvPerson>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HMS_LTRV__6B232905A22E0B7C");

                entity.ToTable("HMS_LTRV_Person");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.PersonId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.PersonName).HasMaxLength(50);

                entity.Property(e => e.ShortName).HasMaxLength(25);
            });

            modelBuilder.Entity<HmsLtrvUnit>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HMS_LTRV__6B2329053A018492");

                entity.ToTable("HMS_LTRV_Unit");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.ShortName).HasMaxLength(25);

                entity.Property(e => e.UnitId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.UnitName).HasMaxLength(50);
            });

            modelBuilder.Entity<HmsMedicine>(entity =>
            {
                entity.HasKey(e => e.MedicineCode);

                entity.ToTable("HMS_Medicine");

                entity.Property(e => e.MedicineCode).HasMaxLength(255);

                entity.Property(e => e.Activity).HasMaxLength(50);

                entity.Property(e => e.BatchNo).HasMaxLength(50);

                entity.Property(e => e.CategoryCode).HasMaxLength(255);

                entity.Property(e => e.CurrencyId).HasMaxLength(50);

                entity.Property(e => e.GenericName).HasMaxLength(255);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(255)
                    .HasColumnName("LUser");

                entity.Property(e => e.ManufacturerCode).HasMaxLength(255);

                entity.Property(e => e.MedicineId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MedicineName).HasMaxLength(255);

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.PackSize).HasMaxLength(100);

                entity.Property(e => e.PackUnitId).HasMaxLength(50);

                entity.Property(e => e.PurchasePrice).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Remarks).HasMaxLength(50);

                entity.Property(e => e.SalesPrice).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ShelfNo).HasMaxLength(50);

                entity.Property(e => e.ShortName).HasMaxLength(255);

                entity.Property(e => e.Strength).HasMaxLength(255);

                entity.Property(e => e.TypeId).HasMaxLength(50);

                entity.Property(e => e.UnitId).HasMaxLength(50);

                entity.Property(e => e.Uom)
                    .HasMaxLength(50)
                    .HasColumnName("UOM");

                entity.Property(e => e.Vat).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Weight).HasMaxLength(50);

                entity.Property(e => e.WeightUnitId).HasMaxLength(50);
            });

            modelBuilder.Entity<HmsMedicineCategory>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HMS_Medi__6B232905AF963977");

                entity.ToTable("HMS_MedicineCategory");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.MedicineCategoryCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.MedicineCategoryName).HasMaxLength(50);

                entity.Property(e => e.MedicineCategoryShortName).HasMaxLength(50);

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<HmsMedicineDosage>(entity =>
            {
                entity.HasKey(e => e.MedicineDosageCode)
                    .HasName("PK_MedicineDosageCode");

                entity.ToTable("HMS_MedicineDosage");

                entity.Property(e => e.MedicineDosageCode).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.MedicineDosageId).ValueGeneratedOnAdd();

                entity.Property(e => e.MedicineDosageName).HasMaxLength(100);

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<HmsMedicineDuration>(entity =>
            {
                entity.HasKey(e => e.MedicineDurationCode)
                    .HasName("PK_MedicineDurationCode");

                entity.ToTable("HMS_MedicineDuration");

                entity.Property(e => e.MedicineDurationCode).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.MedicineDurationId).ValueGeneratedOnAdd();

                entity.Property(e => e.MedicineDurationName).HasMaxLength(100);

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<HmsMedicineManufacturer>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HMS_Medi__6B2329056BA33536");

                entity.ToTable("HMS_MedicineManufacturer");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.MedicineManufacturerCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.MedicineManufacturerName).HasMaxLength(50);

                entity.Property(e => e.MedicineManufacturerShortName).HasMaxLength(25);

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<HmsMedicineSupplier>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HMS_Medi__6B2329056078379A");

                entity.ToTable("HMS_MedicineSupplier");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.MedicineSupplierCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.MedicineSupplierName).HasMaxLength(50);

                entity.Property(e => e.MedicineSupplierShortName).HasMaxLength(25);

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<HmsMedicineTake>(entity =>
            {
                entity.HasKey(e => e.MedicineTakeCode)
                    .HasName("PK_MedicineTakeCode");

                entity.ToTable("HMS_MedicineTake");

                entity.Property(e => e.MedicineTakeCode).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.MedicineTakeId).ValueGeneratedOnAdd();

                entity.Property(e => e.MedicineTakeName).HasMaxLength(100);

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<HmsMedicineType>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HMS_Medi__6B232905AEED50DE");

                entity.ToTable("HMS_MedicineType");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.MedicineTypeCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.MedicineTypeName).HasMaxLength(50);

                entity.Property(e => e.MedicineTypeShortName).HasMaxLength(25);

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<HmsNurse>(entity =>
            {
                entity.HasKey(e => e.NurseCode)
                    .HasName("PK_Nurses");

                entity.ToTable("HMS_Nurse");

                entity.Property(e => e.NurseCode).HasMaxLength(50);

                entity.Property(e => e.ActivityStatus).HasMaxLength(50);

                entity.Property(e => e.BloodGroupCode).HasMaxLength(50);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.DateOfBirth).HasColumnType("smalldatetime");

                entity.Property(e => e.DepartmentCode).HasMaxLength(50);

                entity.Property(e => e.DesignationCode).HasMaxLength(50);

                entity.Property(e => e.Email).HasMaxLength(70);

                entity.Property(e => e.JoiningDate).HasColumnType("smalldatetime");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.NationalIdNo).HasMaxLength(50);

                entity.Property(e => e.NurseId).ValueGeneratedOnAdd();

                entity.Property(e => e.NurseName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.PermanentAddress).HasMaxLength(255);

                entity.Property(e => e.Phone).HasMaxLength(15);

                entity.Property(e => e.PresentAddress).HasMaxLength(255);

                entity.Property(e => e.QualificationCode).HasMaxLength(50);

                entity.Property(e => e.ReligionCode).HasMaxLength(50);

                entity.Property(e => e.Salary).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.SexCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ShiftCode).HasMaxLength(50);

                entity.Property(e => e.SpecialityCode).HasMaxLength(50);
            });

            modelBuilder.Entity<HmsOutPatientPrescription>(entity =>
            {
                entity.HasKey(e => e.PrescriptionCode)
                    .HasName("PK_OutPatientPrescriptions");

                entity.ToTable("HMS_OutPatientPrescription");

                entity.Property(e => e.PrescriptionCode).HasMaxLength(50);

                entity.Property(e => e.ActivityStatus).HasMaxLength(50);

                entity.Property(e => e.BloodGroup).HasMaxLength(100);

                entity.Property(e => e.Bp).HasMaxLength(100);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.PatientCode).HasMaxLength(50);

                entity.Property(e => e.PrescriptionDate).HasColumnType("smalldatetime");

                entity.Property(e => e.PrescriptionId).ValueGeneratedOnAdd();

                entity.Property(e => e.Pulse).HasMaxLength(100);

                entity.Property(e => e.ReportShowingAmount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ReportShowingFeeDiscountAmountt).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Temperature).HasMaxLength(100);

                entity.Property(e => e.VisitingAmount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.VisitingFeeDiscountAmount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.WeightKg).HasMaxLength(100);
            });

            modelBuilder.Entity<HmsPatientCategory>(entity =>
            {
                entity.HasKey(e => e.PatientCategoryCode)
                    .HasName("PK_PatientCategory");

                entity.ToTable("HMS_PatientCategory");

                entity.Property(e => e.PatientCategoryCode).HasMaxLength(50);

                entity.Property(e => e.BanglaShortName).HasMaxLength(100);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.PatientCategoryId).ValueGeneratedOnAdd();

                entity.Property(e => e.PatientCategoryName).HasMaxLength(50);

                entity.Property(e => e.PatientCategoryShortName).HasMaxLength(25);
            });

            modelBuilder.Entity<HmsPatientDischarge>(entity =>
            {
                entity.HasKey(e => e.DischargeId)
                    .HasName("PK__HMS_Pati__CBC080072CB9C390");

                entity.ToTable("HMS_PatientDischarge");

                entity.Property(e => e.DischargeId).HasMaxLength(50);

                entity.Property(e => e.AutoId).ValueGeneratedOnAdd();

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.DischargeDateTime).HasColumnType("datetime");

                entity.Property(e => e.DischargeTypeId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FinalPayment).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.FollowUpAppointmentDate).HasColumnType("datetime");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(90)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(150)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(90)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.PatientCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.RegistrationId).HasMaxLength(50);
            });

            modelBuilder.Entity<HmsPatientRegistration>(entity =>
            {
                entity.HasKey(e => e.PatientId)
                    .HasName("PK_PatientRegistrations");

                entity.ToTable("HMS_PatientRegistration");

                entity.Property(e => e.ActivityStatus).HasMaxLength(50);

                entity.Property(e => e.AdmissionDate).HasColumnType("smalldatetime");

                entity.Property(e => e.AdmissionTypeId).HasMaxLength(50);

                entity.Property(e => e.AdvancePayment).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.AgeDay).HasColumnName("Age_Day");

                entity.Property(e => e.AgeMonth).HasColumnName("Age_Month");

                entity.Property(e => e.AgeYear).HasColumnName("Age_Year");

                entity.Property(e => e.BedCode).HasMaxLength(50);

                entity.Property(e => e.BloodGroupCode).HasMaxLength(50);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.DepartmentCode).HasMaxLength(50);

                entity.Property(e => e.Disease).HasMaxLength(255);

                entity.Property(e => e.DoctorCode).HasMaxLength(50);

                entity.Property(e => e.Email).HasMaxLength(70);

                entity.Property(e => e.EmergencyPhone).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.ExpectedLengthStay).HasMaxLength(50);

                entity.Property(e => e.GuardianName).HasMaxLength(100);

                entity.Property(e => e.GuardianPhone).HasMaxLength(50);

                entity.Property(e => e.IsSendSms).HasColumnName("IsSendSMS");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.NationalIdNo).HasMaxLength(50);

                entity.Property(e => e.PatientCategoryCode).HasMaxLength(50);

                entity.Property(e => e.PatientCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.PatientName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.PatientTypeCode).HasMaxLength(50);

                entity.Property(e => e.PaymentModeCode).HasMaxLength(50);

                entity.Property(e => e.PermanentAddress).HasMaxLength(255);

                entity.Property(e => e.Phone).HasMaxLength(15);

                entity.Property(e => e.PresentAddress).HasMaxLength(255);

                entity.Property(e => e.PrimaryCareDoctorId)
                    .HasMaxLength(50)
                    .HasColumnName("PrimaryCare_DoctorID");

                entity.Property(e => e.ReferenceId).HasMaxLength(50);

                entity.Property(e => e.RegistrationDate).HasColumnType("smalldatetime");

                entity.Property(e => e.RegistrationId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.RelationCode).HasMaxLength(50);

                entity.Property(e => e.ReligionCode).HasMaxLength(50);

                entity.Property(e => e.RoomCode).HasMaxLength(50);

                entity.Property(e => e.RoomTypeCode).HasMaxLength(50);

                entity.Property(e => e.SerialNo).HasMaxLength(50);

                entity.Property(e => e.SexCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.SurnameId).HasMaxLength(50);
            });

            modelBuilder.Entity<HmsPatientType>(entity =>
            {
                entity.HasKey(e => e.PatientTypeCode)
                    .HasName("PK_PatientType");

                entity.ToTable("HMS_PatientType");

                entity.Property(e => e.PatientTypeCode).HasMaxLength(50);

                entity.Property(e => e.BanglaShortName).HasMaxLength(100);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.PatientTypeId).ValueGeneratedOnAdd();

                entity.Property(e => e.PatientTypeName).HasMaxLength(50);

                entity.Property(e => e.PatientTypeShortName).HasMaxLength(25);
            });

            modelBuilder.Entity<HmsPharmacy>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HMS_Pharmacy");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.PharmacyEmail).HasMaxLength(100);

                entity.Property(e => e.PharmacyId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.PharmacyMobile).HasMaxLength(50);

                entity.Property(e => e.PharmacyName)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.ShortName).HasMaxLength(100);
            });

            modelBuilder.Entity<HmsPrescriptionDiagnosis>(entity =>
            {
                entity.HasKey(e => e.PrescriptionDiagnosisCode);

                entity.ToTable("HMS_PrescriptionDiagnosis");

                entity.Property(e => e.PrescriptionDiagnosisCode).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.PrescriptionCode).HasMaxLength(50);

                entity.Property(e => e.PrescriptionDiagnosisId).ValueGeneratedOnAdd();

                entity.Property(e => e.TestChargeCode).HasMaxLength(50);
            });

            modelBuilder.Entity<HmsPrescriptionMedicine>(entity =>
            {
                entity.HasKey(e => e.PrescriptionMedicineId);

                entity.ToTable("HMS_PrescriptionMedicine");

                entity.Property(e => e.DosageCode).HasMaxLength(50);

                entity.Property(e => e.Duration).HasMaxLength(50);

                entity.Property(e => e.DurationCode).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.MedicineCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.PrescriptionCode).HasMaxLength(50);

                entity.Property(e => e.TakeCode).HasMaxLength(50);

                entity.Property(e => e.TakeTime).HasMaxLength(50);

                entity.Property(e => e.TakeUnit).HasMaxLength(50);
            });

            modelBuilder.Entity<HmsQualification>(entity =>
            {
                entity.HasKey(e => e.QualificationCode);

                entity.ToTable("HMS_Qualification");

                entity.Property(e => e.QualificationCode).HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.BanglaQualification).HasMaxLength(100);

                entity.Property(e => e.BanglaShortName).HasMaxLength(100);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.QualificationName).HasMaxLength(100);

                entity.Property(e => e.QualificationShortName).HasMaxLength(50);
            });

            modelBuilder.Entity<HmsReferencePerson>(entity =>
            {
                entity.HasKey(e => e.ReferencePersonId);

                entity.ToTable("HMS_ReferencePerson");

                entity.Property(e => e.ReferencePersonId).HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.IsLabTestPatient)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasDefaultValueSql("(N'No')");

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.PharmacyId).HasMaxLength(50);

                entity.Property(e => e.ReferenceCode).HasMaxLength(50);

                entity.Property(e => e.ReferencePersonEmail).HasMaxLength(100);

                entity.Property(e => e.ReferencePersonMobile)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ReferencePersonName)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<HmsRelation>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HMS_Rela__6B23290501751787");

                entity.ToTable("HMS_Relation");

                entity.Property(e => e.BanglaShortName).HasMaxLength(100);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.Relation).HasMaxLength(50);

                entity.Property(e => e.RelationCode)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<HmsRoom>(entity =>
            {
                entity.HasKey(e => e.RoomCode)
                    .HasName("PK_Room");

                entity.ToTable("HMS_Room");

                entity.Property(e => e.RoomCode).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.RoomId).ValueGeneratedOnAdd();

                entity.Property(e => e.RoomNo).HasMaxLength(50);

                entity.Property(e => e.RoomTypeCode)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<HmsRoomCost>(entity =>
            {
                entity.HasKey(e => e.RoomCostCode)
                    .HasName("PK_RoomCost");

                entity.ToTable("HMS_RoomCost");

                entity.Property(e => e.RoomCostCode).HasMaxLength(50);

                entity.Property(e => e.Cost).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.RoomCode)
                    .IsRequired()
                    .HasMaxLength(25);

                entity.Property(e => e.RoomCostId).ValueGeneratedOnAdd();

                entity.Property(e => e.RoomTypeCode)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<HmsRoomType>(entity =>
            {
                entity.HasKey(e => e.RoomTypeCode)
                    .HasName("PK_RoomType");

                entity.ToTable("HMS_RoomType");

                entity.Property(e => e.RoomTypeCode).HasMaxLength(50);

                entity.Property(e => e.BanglaShortName).HasMaxLength(100);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.RoomTypeId).ValueGeneratedOnAdd();

                entity.Property(e => e.RoomTypeName).HasMaxLength(50);

                entity.Property(e => e.RoomTypeShortName).HasMaxLength(25);
            });

            modelBuilder.Entity<HmsServiceChargeGroup>(entity =>
            {
                entity.HasKey(e => e.ServiceChargeGroupId)
                    .HasName("PK__HMS_Serv__C7BAAA3A7411C47B");

                entity.ToTable("HMS_ServiceChargeGroup");

                entity.Property(e => e.ServiceChargeGroupId).HasMaxLength(50);

                entity.Property(e => e.AutoId).ValueGeneratedOnAdd();

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(90)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(150)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(90)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.ServiceChargeGroup).HasMaxLength(255);

                entity.Property(e => e.ShortName).HasMaxLength(50);
            });

            modelBuilder.Entity<HmsServiceChargeHead>(entity =>
            {
                entity.HasKey(e => e.ServiceChargeHeadId)
                    .HasName("PK__HMS_Serv__8F6462D8FCB344C9");

                entity.ToTable("HMS_ServiceChargeHead");

                entity.Property(e => e.ServiceChargeHeadId).HasMaxLength(50);

                entity.Property(e => e.AutoId).ValueGeneratedOnAdd();

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(90)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(150)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(90)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.ServiceChargeGroupId).HasMaxLength(50);

                entity.Property(e => e.ServiceChargeHead).HasMaxLength(255);

                entity.Property(e => e.ShortName).HasMaxLength(50);
            });

            modelBuilder.Entity<HmsShift>(entity =>
            {
                entity.HasKey(e => e.ShiftCode)
                    .HasName("PK__HMS_Shif__9377D5637180E0C2");

                entity.ToTable("HMS_Shift");

                entity.Property(e => e.ShiftCode).HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.BanglaShift).HasMaxLength(100);

                entity.Property(e => e.BanglaShortName).HasMaxLength(100);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.InTime).HasColumnType("smalldatetime");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.OutTime).HasColumnType("smalldatetime");

                entity.Property(e => e.ShiftName).HasMaxLength(100);

                entity.Property(e => e.ShiftShortName).HasMaxLength(50);
            });

            modelBuilder.Entity<HmsSpeciality>(entity =>
            {
                entity.HasKey(e => e.SpecialityCode);

                entity.ToTable("HMS_Speciality");

                entity.Property(e => e.SpecialityCode).HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.BanglaShortName).HasMaxLength(100);

                entity.Property(e => e.BanglaSpeciality).HasMaxLength(100);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.SpecialityName).HasMaxLength(100);

                entity.Property(e => e.SpecialityShortName).HasMaxLength(50);
            });

            modelBuilder.Entity<HmsSpecimen>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HMS_Spec__6B232905C6D5095F");

                entity.ToTable("HMS_Specimen");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(90)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(150)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(90)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.RoomNo).HasMaxLength(50);

                entity.Property(e => e.Specimen)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.SpecimenId).HasMaxLength(50);

                entity.Property(e => e.TestCategoryCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.TestChargeCode).IsRequired();

                entity.Property(e => e.TestSubCategoryCode).HasMaxLength(50);
            });

            modelBuilder.Entity<HmsTestCategory>(entity =>
            {
                entity.HasKey(e => e.TestCategoryCode)
                    .HasName("PK_TestCategory");

                entity.ToTable("HMS_TestCategory");

                entity.Property(e => e.TestCategoryCode).HasMaxLength(50);

                entity.Property(e => e.BanglaShortName).HasMaxLength(25);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.TestCategoryId).ValueGeneratedOnAdd();

                entity.Property(e => e.TestCategoryName).HasMaxLength(100);

                entity.Property(e => e.TestCategoryShortName).HasMaxLength(25);
            });

            modelBuilder.Entity<HmsTestCharge>(entity =>
            {
                entity.HasKey(e => e.TestChargeCode)
                    .HasName("PK_TestCharge");

                entity.ToTable("HMS_TestCharge");

                entity.Property(e => e.TestChargeCode).HasMaxLength(50);

                entity.Property(e => e.Amount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.BanglaShortName).HasMaxLength(25);

                entity.Property(e => e.CarriedOutById).HasMaxLength(50);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.DeliveryPeriodId).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.SpecimenId).HasMaxLength(50);

                entity.Property(e => e.TestCategoryCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.TestChargeId).ValueGeneratedOnAdd();

                entity.Property(e => e.TestChargeName)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.TestChargeShortName).HasMaxLength(25);

                entity.Property(e => e.TestSubCategoryCode).HasMaxLength(50);
            });

            modelBuilder.Entity<HmsTestEntry>(entity =>
            {
                entity.HasKey(e => e.LabTestNo)
                    .HasName("PK__HMS_Test__C82F4F78ABB5BDE5");

                entity.ToTable("HMS_TestEntry");

                entity.Property(e => e.LabTestNo).HasMaxLength(50);

                entity.Property(e => e.ApprovedDateTime).HasColumnType("datetime");

                entity.Property(e => e.ApprovedEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("Approved_EmployeeID");

                entity.Property(e => e.AutoId).ValueGeneratedOnAdd();

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.DiscountAmount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.DiscountPercent).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.DiscountPermittedBy).HasMaxLength(50);

                entity.Property(e => e.Due).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.DuePaymentDate).HasColumnType("datetime");

                entity.Property(e => e.DuePaymentModeId).HasMaxLength(50);

                entity.Property(e => e.DueReceived).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IsApproved).HasMaxLength(50);

                entity.Property(e => e.LabTestDateTime).HasColumnType("datetime");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Less).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Lip)
                    .HasMaxLength(90)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(150)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(90)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.MrdateTime)
                    .HasColumnType("datetime")
                    .HasColumnName("MRDateTime");

                entity.Property(e => e.Mrno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("MRNo");

                entity.Property(e => e.PatientCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Payable).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PreparedBy).HasMaxLength(90);

                entity.Property(e => e.Received).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RegistrationId).HasMaxLength(50);

                entity.Property(e => e.Remarks).HasMaxLength(50);

                entity.Property(e => e.TotalAmount).HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<HmsTestEntryDetails>(entity =>
            {
                entity.HasKey(e => e.LabTestDetailsId)
                    .HasName("PK__HMS_Test__209D27084CCB74F7");

                entity.ToTable("HMS_TestEntryDetails");

                entity.Property(e => e.AfterDiscountAmount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Amount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.DeliveryDate).HasColumnType("smalldatetime");

                entity.Property(e => e.DiscountAmount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.DiscountPercent).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.LabTestNo)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Luser)
                    .HasMaxLength(90)
                    .HasColumnName("LUser");

                entity.Property(e => e.TestCategoryCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.TestChargeCode).HasMaxLength(50);

                entity.Property(e => e.TestSubCategoryCode).HasMaxLength(50);
            });

            modelBuilder.Entity<HmsTestSubCategory>(entity =>
            {
                entity.HasKey(e => e.TestSubCategoryCode)
                    .HasName("PK_TestSubCategory");

                entity.ToTable("HMS_TestSubCategory");

                entity.Property(e => e.TestSubCategoryCode).HasMaxLength(50);

                entity.Property(e => e.Amount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.BanglaShortName).HasMaxLength(25);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.TestCategoryCode).HasMaxLength(50);

                entity.Property(e => e.TestSubCategoryId).ValueGeneratedOnAdd();

                entity.Property(e => e.TestSubCategoryName).HasMaxLength(100);

                entity.Property(e => e.TestSubCategoryShortName).HasMaxLength(25);
            });

            modelBuilder.Entity<HrmAtdAttendanceType>(entity =>
            {
                entity.HasKey(e => e.AttendanceTypeCode)
                    .HasName("PK__HRM_ATD___B3A77E826C8A62B2");

                entity.ToTable("HRM_ATD_AttendanceType");

                entity.Property(e => e.AttendanceTypeCode).HasMaxLength(50);

                entity.Property(e => e.AttendanceTypeName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.ShortName)
                    .IsRequired()
                    .HasMaxLength(250);
            });

            modelBuilder.Entity<HrmAtdCompanyWeekEnd>(entity =>
            {
                entity.HasKey(e => e.CompanyWeekEndCode)
                    .HasName("PK__HRM_ATD___319EAF5631EA260A");

                entity.ToTable("HRM_ATD_CompanyWeekEnd");

                entity.Property(e => e.CompanyWeekEndCode).HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.EffectiveDate).HasColumnType("datetime");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.Weekend)
                    .IsRequired()
                    .HasMaxLength(250);
            });

            modelBuilder.Entity<HrmAtdHoliday>(entity =>
            {
                entity.HasKey(e => e.HolidayCode)
                    .HasName("PK__HRM_ATD___55A216D684432C5F");

                entity.ToTable("HRM_ATD_Holiday");

                entity.Property(e => e.HolidayCode).HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.FromDate).HasColumnType("datetime");

                entity.Property(e => e.HolidayName)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.HolidayType).HasMaxLength(250);

                entity.Property(e => e.HolidayTypeCode).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.ToDate).HasColumnType("datetime");

                entity.HasOne(d => d.HolidayTypeCodeNavigation)
                    .WithMany(p => p.HrmAtdHoliday)
                    .HasForeignKey(d => d.HolidayTypeCode)
                    .HasConstraintName("FK__HRM_ATD_H__Holid__7CC477D0");
            });

            modelBuilder.Entity<HrmAtdLeaveType>(entity =>
            {
                entity.HasKey(e => e.LeaveTypeCode)
                    .HasName("PK__HRM_ATD___A264FAEF2FF0834B");

                entity.ToTable("HRM_ATD_LeaveType");

                entity.Property(e => e.LeaveTypeCode).HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.For).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.NoOfDay).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.RulePolicy)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.ShortName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Wef)
                    .HasColumnType("datetime")
                    .HasColumnName("WEF");

                entity.Property(e => e.Ymwd)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("YMWD");
            });

            modelBuilder.Entity<HrmAtdMachineData>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HRM_ATD___385EFE489FB8A25E");

                entity.ToTable("HRM_ATD_MachineData");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.Date).HasColumnType("datetime");

                entity.Property(e => e.FingerPrintId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("FingerPrintID");

                entity.Property(e => e.Hoalr)
                    .HasMaxLength(50)
                    .HasColumnName("HOALR");

                entity.Property(e => e.Latitude).HasColumnName("Latitude ");

                entity.Property(e => e.MachineId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Time).HasColumnType("datetime");
            });

            modelBuilder.Entity<HrmAtdManual>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HRM_ATD___385EFE486DF88245");

                entity.ToTable("HRM_ATD_Manual");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.AttdEntryType)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.AttendanceTypeCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.BulkEntryId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.Date).HasColumnType("datetime");

                entity.Property(e => e.DayName).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Latitude).HasColumnName("Latitude ");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ManualCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.MonthName).HasMaxLength(50);

                entity.Property(e => e.Remarks).HasMaxLength(250);

                entity.Property(e => e.Time).HasColumnType("datetime");

                entity.Property(e => e.YearName).HasMaxLength(50);
            });

            modelBuilder.Entity<HrmAtdShift>(entity =>
            {
                entity.HasKey(e => e.ShiftCode)
                    .HasName("PK__HRM_ATD___9377D5634656D54A");

                entity.ToTable("HRM_ATD_Shift");

                entity.Property(e => e.ShiftCode).HasMaxLength(50);

                entity.Property(e => e.AbsentTime).HasColumnType("datetime");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.LateTime).HasColumnType("datetime");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.LunchBreakHour)
                    .HasColumnType("decimal(5, 2)")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.LunchInTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('1900-01-01 00:00:00')");

                entity.Property(e => e.LunchOutTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('1900-01-01 00:00:00')");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.Remarks)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.ShiftEndTime).HasColumnType("datetime");

                entity.Property(e => e.ShiftName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ShiftShortName)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.ShiftStartTime).HasColumnType("datetime");

                entity.Property(e => e.ShiftTypeId)
                    .HasMaxLength(15)
                    .HasColumnName("ShiftTypeID");

                entity.Property(e => e.Wef)
                    .HasColumnType("datetime")
                    .HasColumnName("WEF");
            });

            modelBuilder.Entity<HrmAttWorkingDayDeclaration>(entity =>
            {
                entity.HasKey(e => e.WorkingDayCode)
                    .HasName("PK__HRM_Att___0A0E67BDCA992F6A");

                entity.ToTable("HRM_Att_WorkingDayDeclaration");

                entity.Property(e => e.WorkingDayCode).HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.Remarks)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.WorkingDayDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<HrmBrand>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HRM_Brand");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.BrandId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("BrandID");

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.ShortName).HasMaxLength(100);

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<HrmDefBankAndNomineeInfo>(entity =>
            {
                entity.HasKey(e => e.BankAndNomineeId)
                    .HasName("PK__HRM_Def___41211C01CF2EDF0D");

                entity.ToTable("HRM_Def_BankAndNomineeInfo");

                entity.Property(e => e.BankAndNomineeId).HasMaxLength(50);

                entity.Property(e => e.AtmcardNo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("ATMCardNo");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BankAccountName)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.BankAccountNo)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.BankBranchId)
                    .IsRequired()
                    .HasMaxLength(250)
                    .HasColumnName("BankBranchID");

                entity.Property(e => e.BankId)
                    .IsRequired()
                    .HasMaxLength(250)
                    .HasColumnName("BankID");

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.EmployeeId2)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID2");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.NomineeName)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.ParmanentAddress)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("ParmanentAddress ");

                entity.Property(e => e.PresentAddress)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Relation)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<HrmDefBloodGroup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HRM_Def_BloodGroup");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.BloodGroup)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.BloodGroupCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<HrmDefBoardCountryName>(entity =>
            {
                entity.HasKey(e => e.BoardCode)
                    .HasName("PK__HRM_Def___DB01F5337E43C2A0");

                entity.ToTable("HRM_Def_BoardCountryName");

                entity.Property(e => e.BoardCode).HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.BoardName).HasMaxLength(100);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.ShortName).HasMaxLength(50);

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<HrmDefCompanyInfo>(entity =>
            {
                entity.HasKey(e => e.CompanyNameId)
                    .HasName("PK__HRM_Def___7A1E2176EB2FE3DA");

                entity.ToTable("HRM_Def_CompanyInfo");

                entity.Property(e => e.CompanyNameId)
                    .HasMaxLength(50)
                    .HasColumnName("CompanyNameID");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.ShortName).HasMaxLength(50);

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<HrmDefCourseTitle>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HRM_Def_CourseTitle");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.CourseCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.ShortName).HasMaxLength(50);

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<HrmDefDegree>(entity =>
            {
                entity.HasKey(e => e.DegreeCode)
                    .HasName("PK__HRM_Def___DB036BBD362D6B4C");

                entity.ToTable("HRM_Def_Degree");

                entity.Property(e => e.DegreeCode).HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.DegreeName).HasMaxLength(100);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.ShortName).HasMaxLength(50);

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<HrmDefDepartment>(entity =>
            {
                entity.HasKey(e => e.DepartmentCode)
                    .HasName("PK__HRM_Def___6EA8896C1CDFF889");

                entity.ToTable("HRM_Def_Department");

                entity.Property(e => e.DepartmentCode).HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.BanglaDepartment).HasMaxLength(100);

                entity.Property(e => e.BanglaShortName).HasMaxLength(100);

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DepartmentName).HasMaxLength(100);

                entity.Property(e => e.DepartmentShortName).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<HrmDefDesignation>(entity =>
            {
                entity.HasKey(e => e.DesignationCode)
                    .HasName("PK__HRM_Def___B676DA1E25512F97");

                entity.ToTable("HRM_Def_Designation");

                entity.Property(e => e.DesignationCode).HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.BanglaDesignation)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.BanglaShortName)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DesignationName).HasMaxLength(100);

                entity.Property(e => e.DesignationShortName).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.GradeCode).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.MobileAllowanceId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("MobileAllowanceID");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.StepNoId).HasMaxLength(50);
            });

            modelBuilder.Entity<HrmDefDistrict>(entity =>
            {
                entity.HasKey(e => e.DistrictId)
                    .HasName("PK__HRM_Def___85FDA4A6BDEDC15E");

                entity.ToTable("HRM_Def_District");

                entity.Property(e => e.DistrictId)
                    .HasMaxLength(50)
                    .HasColumnName("DistrictID");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.District)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<HrmDefDivision>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HRM_Def_Division");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.BranchCode).HasMaxLength(50);

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DivisionCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DivisionName)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.DivisionShortName).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<HrmDefEmpType>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HRM_Def_EmpType");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.BanglaEmployeeType).HasMaxLength(350);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.EmpTypeCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.EmpTypeName).HasMaxLength(100);

                entity.Property(e => e.EmpTypeShortName).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<HrmDefEmployeeStatus>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HRM_Def_EmployeeStatus");

                entity.Property(e => e.EmployeeStatus)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.EmployeeStatusCode)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.EmployeeStatusId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.ShortName)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<HrmDefExamGroupInfo>(entity =>
            {
                entity.HasKey(e => e.GroupCode)
                    .HasName("PK__HRM_Def___3B974381EB27A163");

                entity.ToTable("HRM_Def_ExamGroupInfo");

                entity.Property(e => e.GroupCode).HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.GroupName).HasMaxLength(100);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.ShortName).HasMaxLength(50);

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<HrmDefExamTitle>(entity =>
            {
                entity.HasKey(e => e.ExamTitleCode)
                    .HasName("PK__HRM_Def___D99D62E795D604AC");

                entity.ToTable("HRM_Def_ExamTitle");

                entity.Property(e => e.ExamTitleCode).HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.ExamTitleName).HasMaxLength(100);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.ShortName).HasMaxLength(50);
            });

            modelBuilder.Entity<HrmDefFloor>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HRM_Def_Floor");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.FloorCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FloorName).HasMaxLength(100);

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.ShortName).HasMaxLength(50);
            });

            modelBuilder.Entity<HrmDefGrade>(entity =>
            {
                entity.HasKey(e => e.GradeCode)
                    .HasName("PK__HRM_Def___B1E0A187D624A695");

                entity.ToTable("HRM_Def_Grade");

                entity.Property(e => e.GradeCode).HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.FromGrossSalary).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.GradeName).HasMaxLength(100);

                entity.Property(e => e.GradeShortName).HasMaxLength(50);

                entity.Property(e => e.GradeTypeId)
                    .HasMaxLength(50)
                    .HasColumnName("GradeTypeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.ToGrossSalary).HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<HrmDefGradeType>(entity =>
            {
                entity.HasKey(e => e.GradeTypeId)
                    .HasName("PK__HRM_Def___314515D949464C94");

                entity.ToTable("HRM_Def_GradeType");

                entity.Property(e => e.GradeTypeId)
                    .HasMaxLength(50)
                    .HasColumnName("GradeTypeID");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BanglaGradeType).HasMaxLength(350);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.GradeType).HasMaxLength(100);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.ShortName).HasMaxLength(50);
            });

            modelBuilder.Entity<HrmDefHolidayType>(entity =>
            {
                entity.HasKey(e => e.HolidayTypeCode)
                    .HasName("PK__HRM_Def___4FF3B142EC5229BC");

                entity.ToTable("HRM_Def_HolidayType");

                entity.Property(e => e.HolidayTypeCode).HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.HolidayType)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.ShortName)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<HrmDefInstitute>(entity =>
            {
                entity.HasKey(e => e.InstituteCode)
                    .HasName("PK__HRM_Def___623D5D85E133B94C");

                entity.ToTable("HRM_Def_Institute");

                entity.Property(e => e.InstituteCode).HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.InstituteName).HasMaxLength(100);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.ShortName).HasMaxLength(50);

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<HrmDefJobTitle>(entity =>
            {
                entity.HasKey(e => e.JobTitleId)
                    .HasName("PK__HRM_Def___35382FE9D5ED59AF");

                entity.ToTable("HRM_Def_JobTitle");

                entity.Property(e => e.JobTitleId).HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.JobTitle).HasMaxLength(200);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<HrmDefMaritalStatus>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HRM_Def_MaritalStatus");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.MaritalStatus)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.MaritalStatusCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<HrmDefNationality>(entity =>
            {
                entity.HasKey(e => e.NationalityCode)
                    .HasName("PK__HRM_Def___1E433F0C4382DF3D");

                entity.ToTable("HRM_Def_Nationality");

                entity.Property(e => e.NationalityCode).HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.Nationality)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<HrmDefOccupation>(entity =>
            {
                entity.HasKey(e => e.OccupationCode)
                    .HasName("PK__HRM_Def___B907D5C06A2F7DF1");

                entity.ToTable("HRM_Def_Occupation");

                entity.Property(e => e.OccupationCode).HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.Occupation)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ShortName)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<HrmDefPerformance>(entity =>
            {
                entity.HasKey(e => e.PerformanceCode)
                    .HasName("PK__HRM_Def___28950CC1C60E2E9B");

                entity.ToTable("HRM_Def_Performance");

                entity.Property(e => e.PerformanceCode).HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.JobTitleId).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.PerformanceShortName).HasMaxLength(500);
            });

            modelBuilder.Entity<HrmDefPerformance2>(entity =>
            {
                entity.HasKey(e => e.PerformanceCode)
                    .HasName("PK__HRM_Def___28950CC14BC83035");

                entity.ToTable("HRM_Def_Performance2");

                entity.Property(e => e.PerformanceCode).HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.JobTitleId).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.PerformanceShortName).HasMaxLength(500);
            });

            modelBuilder.Entity<HrmDefRelationship>(entity =>
            {
                entity.HasKey(e => e.RelationshipCode)
                    .HasName("PK__HRM_Def___C74433096D3C0E8F");

                entity.ToTable("HRM_Def_Relationship");

                entity.Property(e => e.RelationshipCode).HasMaxLength(50);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.Relationship)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ShortName)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<HrmDefReligion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HRM_Def_Religion");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.Religion)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ReligionCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ShortName)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<HrmDefSeparationType>(entity =>
            {
                entity.HasKey(e => e.SeparationTypeId)
                    .HasName("PK__HRM_Def___3037F338A6CEBDAB");

                entity.ToTable("HRM_Def_SeparationType");

                entity.Property(e => e.SeparationTypeId).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.SeparationType)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.SeparationTypeCode)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<HrmDefSex>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HRM_Def_Sex");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.Sex)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.SexCode)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<HrmDefSurName>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HRM_Def___6B232905CB43EC79");

                entity.ToTable("HRM_Def_SurName");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BanglaSurname).HasMaxLength(100);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.Surname).HasMaxLength(100);

                entity.Property(e => e.SurnameId)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<HrmEarnLeaveEntry>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK_HRM_EarnLeaveEntry_1");

                entity.ToTable("HRM_EarnLeaveEntry");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AvailedLeaveDays).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.BalancedLeaveDays).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.EarnLeaveId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EarnLeaveID");

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.GrantedLeaveDays).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.Year).HasMaxLength(50);
            });

            modelBuilder.Entity<HrmEisDefDisbursementMethod>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HRM_EIS_Def_DisbursementMethod");

                entity.Property(e => e.DisbursementMethod)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DisbursementMethodId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.ShortName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Tc)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TC");
            });

            modelBuilder.Entity<HrmEisDefEmploymentNature>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HRM_EIS_Def_EmploymentNature");

                entity.Property(e => e.BanglaEmployeeNature).HasMaxLength(350);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.EmploymentNature)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.EmploymentNatureId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.ShortName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Tc)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TC");
            });

            modelBuilder.Entity<HrmEisReposition>(entity =>
            {
                entity.HasKey(e => e.Tc)
                    .HasName("PK__HRM_EIS___3214E4086B68F9B7");

                entity.ToTable("HRM_EIS_Reposition");

                entity.Property(e => e.Tc)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TC");

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.CurrBranchCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CurrCompanyCode2)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.CurrDepartmentCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CurrDesignationCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CurrDivisionCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CurrExpatriateBasicSalary)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Curr_ExpatriateBasicSalary");

                entity.Property(e => e.CurrExpatriateConveyance)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Curr_ExpatriateConveyance");

                entity.Property(e => e.CurrExpatriateFcp)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Curr_ExpatriateFCP");

                entity.Property(e => e.CurrExpatriateHouseRent)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Curr_ExpatriateHouseRent");

                entity.Property(e => e.CurrExpatriateMedical)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Curr_ExpatriateMedical");

                entity.Property(e => e.CurrLineCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CurrLocationCode).HasMaxLength(50);

                entity.Property(e => e.CurrSectionCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CurrentGradeCode).HasMaxLength(50);

                entity.Property(e => e.CurrentSalary).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.MonthName).HasMaxLength(100);

                entity.Property(e => e.PreBranchCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.PreCompanyCode2)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.PreDepartmentCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.PreDesignationCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.PreDivisionCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.PreExpatriateBasicSalary)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Pre_ExpatriateBasicSalary");

                entity.Property(e => e.PreExpatriateConveyance)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Pre_ExpatriateConveyance");

                entity.Property(e => e.PreExpatriateFcp)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Pre_ExpatriateFCP");

                entity.Property(e => e.PreExpatriateHouseRent)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Pre_ExpatriateHouseRent");

                entity.Property(e => e.PreExpatriateMedical)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Pre_ExpatriateMedical");

                entity.Property(e => e.PreGradeCode).HasMaxLength(50);

                entity.Property(e => e.PreLineCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.PreLocationCode).HasMaxLength(50);

                entity.Property(e => e.PreSectionCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.PreviousSalary).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PromotionAmount).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RefLetterDate).HasColumnType("datetime");

                entity.Property(e => e.RefLetterNo)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.Remark)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.RepositionId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Type)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Wef)
                    .HasColumnType("datetime")
                    .HasColumnName("WEF");

                entity.Property(e => e.Year)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<HrmEmpDigitalSignature>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HRM_EmpD__385EFE489525D0E5");

                entity.ToTable("HRM_EmpDigitalSignature");

                entity.Property(e => e.AutoId).HasColumnName("autoId");

                entity.Property(e => e.DigitalSignature)
                    .IsRequired()
                    .HasColumnType("image");

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.ImgType)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<HrmEmployee>(entity =>
            {
                entity.HasKey(e => e.EmployeeId)
                    .HasName("PK__HRM_Empl__7AD04FF18752AF2D");

                entity.ToTable("HRM_Employee");

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.BirthCertificateNo)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.BloodGroupCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(50);

                entity.Property(e => e.CardNo)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DateOfBirthCertificate).HasColumnType("datetime");

                entity.Property(e => e.DateOfBirthOrginal).HasColumnType("datetime");

                entity.Property(e => e.FatherName)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.FathersOccupation).HasMaxLength(100);

                entity.Property(e => e.FirstName)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.FirstNameBangla).HasMaxLength(200);

                entity.Property(e => e.LastName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.LastNameBangla).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.MaritalStatusCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.MarriageDate).HasColumnType("datetime");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.MotherName)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.MothersOccupation).HasMaxLength(100);

                entity.Property(e => e.NationalIdno)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("NationalIDNO");

                entity.Property(e => e.NationalityCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.NoOfDaughters)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.NoOfSon)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.PersonalEmail)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.PlaceOfBirth).IsRequired();

                entity.Property(e => e.ReligionCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.SexCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Spouse).HasMaxLength(100);

                entity.Property(e => e.Telephone)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.TinNo).HasMaxLength(100);

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<HrmEmployee2>(entity =>
            {
                entity.HasKey(e => e.EmployeeId)
                    .HasName("PK__HRM_Empl__7AD04FF19F0F24D4");

                entity.ToTable("HRM_Employee2");

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.BirthCertificateNo)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.BloodGroupCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(50);

                entity.Property(e => e.CardNo)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DateOfBirthCertificate).HasColumnType("datetime");

                entity.Property(e => e.DateOfBirthOrginal).HasColumnType("datetime");

                entity.Property(e => e.FatherName)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.FatherOccupation).HasMaxLength(100);

                entity.Property(e => e.FirstName)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.FirstNameBangla).HasMaxLength(200);

                entity.Property(e => e.LastName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.LastNameBangla).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.MaritalStatusCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.MarriageDate).HasColumnType("datetime");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.MotherName)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.MotherOccupation).HasMaxLength(100);

                entity.Property(e => e.NationalIdno)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("NationalIDNO");

                entity.Property(e => e.NationalityCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.NoOfDaughters)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.NoOfSon)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.PersonalEmail)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.PlaceOfBirth).IsRequired();

                entity.Property(e => e.ReligionCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.SexCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Spouse).HasMaxLength(100);

                entity.Property(e => e.Telephone)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.TinNo).HasMaxLength(100);

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<HrmEmployeeAdditionalInfo>(entity =>
            {
                entity.HasKey(e => e.EmployeAddInfoId)
                    .HasName("PK__HRM_Empl__A5574297B042CCF4");

                entity.ToTable("HRM_EmployeeAdditionalInfo");

                entity.Property(e => e.EmployeAddInfoId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeAddInfoID");

                entity.Property(e => e.AtmCardNo).HasMaxLength(200);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.BankAcNameSibl)
                    .HasMaxLength(50)
                    .HasColumnName("BankAcNameSIBL");

                entity.Property(e => e.BankAcNameUcbl)
                    .HasMaxLength(50)
                    .HasColumnName("BankAcNameUCBL");

                entity.Property(e => e.BankAcNo)
                    .HasMaxLength(200)
                    .HasColumnName("BankAcNO");

                entity.Property(e => e.BankAcNoSibl)
                    .HasMaxLength(50)
                    .HasColumnName("BankAcNoSIBL");

                entity.Property(e => e.BankAcNoUcbl)
                    .HasMaxLength(50)
                    .HasColumnName("BankAcNoUCBL");

                entity.Property(e => e.BankAcname)
                    .HasMaxLength(300)
                    .HasColumnName("BankACName");

                entity.Property(e => e.BankBranchIdsibl)
                    .HasMaxLength(50)
                    .HasColumnName("BankBranchIDSIBL");

                entity.Property(e => e.BankBranchIducbl)
                    .HasMaxLength(50)
                    .HasColumnName("BankBranchIDUCBL");

                entity.Property(e => e.BankIdsibl)
                    .HasMaxLength(50)
                    .HasColumnName("BankIDSIBL");

                entity.Property(e => e.BankIducbl)
                    .HasMaxLength(50)
                    .HasColumnName("BankIDUCBL");

                entity.Property(e => e.BranchAddressSibl)
                    .HasMaxLength(50)
                    .HasColumnName("BranchAddressSIBL");

                entity.Property(e => e.BranchAddressUcbl)
                    .HasMaxLength(50)
                    .HasColumnName("BranchAddressUCBL");

                entity.Property(e => e.BranchCode).HasMaxLength(50);

                entity.Property(e => e.CompanyCode).HasMaxLength(10);

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.LicenseExpireDate).HasColumnType("datetime");

                entity.Property(e => e.LicenseIssueDate).HasColumnType("datetime");

                entity.Property(e => e.LicenseNo).HasMaxLength(200);

                entity.Property(e => e.LicenseType).HasMaxLength(200);

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.PassportExpiryDate).HasColumnType("datetime");

                entity.Property(e => e.PassportIssueDate).HasColumnType("datetime");

                entity.Property(e => e.PassportName).HasMaxLength(100);

                entity.Property(e => e.PassportNo).HasMaxLength(200);

                entity.Property(e => e.SalaryBankId)
                    .HasMaxLength(50)
                    .HasColumnName("SalaryBankID");

                entity.Property(e => e.SalaryBranchId)
                    .HasMaxLength(50)
                    .HasColumnName("SalaryBranchID");

                entity.Property(e => e.SymbolOfVehicleClass).HasMaxLength(300);

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");

                entity.Property(e => e.WorkPermitNo)
                    .HasMaxLength(100)
                    .HasColumnName("WorkPermitNO");

                entity.Property(e => e.WorkPermitType).HasMaxLength(200);

                entity.Property(e => e.WpEffectiveDate).HasColumnType("datetime");

                entity.Property(e => e.WpExpireDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<HrmEmployeeContactInfo>(entity =>
            {
                entity.HasKey(e => e.EmpContactId)
                    .HasName("PK__HRM_Empl__AD39AA4D681F8C41");

                entity.ToTable("HRM_EmployeeContactInfo");

                entity.Property(e => e.EmpContactId)
                    .HasMaxLength(50)
                    .HasColumnName("EmpContactID");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.BranchCode).HasMaxLength(50);

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.EmContactEmai2).HasMaxLength(100);

                entity.Property(e => e.EmContactEmail).HasMaxLength(100);

                entity.Property(e => e.EmContactFax1).HasMaxLength(50);

                entity.Property(e => e.EmContactFax2).HasMaxLength(50);

                entity.Property(e => e.EmContactMobile1).HasMaxLength(100);

                entity.Property(e => e.EmContactMobile2).HasMaxLength(100);

                entity.Property(e => e.EmContactPhone1).HasMaxLength(50);

                entity.Property(e => e.EmContactPhone2).HasMaxLength(50);

                entity.Property(e => e.EmContactRelation1).HasMaxLength(50);

                entity.Property(e => e.EmContactRelation2).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.ParmanentDistrict).HasMaxLength(50);

                entity.Property(e => e.ParmanentPhone).HasMaxLength(50);

                entity.Property(e => e.ParmanentPostCode).HasMaxLength(50);

                entity.Property(e => e.ParmanentPostOffice).HasMaxLength(300);

                entity.Property(e => e.ParmanentThana).HasMaxLength(300);

                entity.Property(e => e.PresentDistrict).HasMaxLength(50);

                entity.Property(e => e.PresentEmail).HasMaxLength(200);

                entity.Property(e => e.PresentFax).HasMaxLength(50);

                entity.Property(e => e.PresentMobile).HasMaxLength(50);

                entity.Property(e => e.PresentPhone).HasMaxLength(50);

                entity.Property(e => e.PresentPostCode).HasMaxLength(50);

                entity.Property(e => e.PresentPostOffice).HasMaxLength(300);

                entity.Property(e => e.PresentThana).HasMaxLength(300);

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<HrmEmployeeDocumentInfo>(entity =>
            {
                entity.HasKey(e => e.EmpDocId)
                    .HasName("PK__HRM_Empl__031DDBB8DCC90C8A");

                entity.ToTable("HRM_EmployeeDocumentInfo");

                entity.Property(e => e.EmpDocId)
                    .HasMaxLength(50)
                    .HasColumnName("EmpDocID");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.BranchCode).HasMaxLength(50);

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.DocumentType).HasMaxLength(500);

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<HrmEmployeeEducation>(entity =>
            {
                entity.HasKey(e => e.EmpEduCode)
                    .HasName("PK__HRM_Empl__2B8B2F0EBF00D2B2");

                entity.ToTable("HRM_EmployeeEducation");

                entity.Property(e => e.EmpEduCode).HasMaxLength(50);

                entity.Property(e => e.Achievment).IsRequired();

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.BoardCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.BranchCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CgpaMarks)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.DegreeCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Dueration)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DuratioinType)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.ExamTitleCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.GroupCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.InstitueCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.Remarks).IsRequired();

                entity.Property(e => e.ResultDivision)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.ScaleOf)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("ScaleOF");

                entity.Property(e => e.YearofPasssing)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<HrmEmployeeExp>(entity =>
            {
                entity.HasKey(e => e.EmpExpId)
                    .HasName("PK__HRM_Empl__16691728DBAC4701");

                entity.ToTable("HRM_EmployeeExp");

                entity.Property(e => e.EmpExpId)
                    .HasMaxLength(50)
                    .HasColumnName("EmpExpID");

                entity.Property(e => e.Address).IsRequired();

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.BusinessType).IsRequired();

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.CompanyNameId)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("CompanyNameID");

                entity.Property(e => e.DepartmentId)
                    .HasMaxLength(50)
                    .HasColumnName("DepartmentID");

                entity.Property(e => e.DesignationId)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("DesignationID");

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.FromDate).HasColumnType("datetime");

                entity.Property(e => e.JobNatureId)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("JobNatureID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.Remarks)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.Responsibilities).IsRequired();

                entity.Property(e => e.Salary).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ToDate).HasColumnType("datetime");

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<HrmEmployeeFamily>(entity =>
            {
                entity.HasKey(e => e.EmpFamilyId)
                    .HasName("PK__HRM_Empl__B275991BEBF9EEEE");

                entity.ToTable("HRM_EmployeeFamily");

                entity.Property(e => e.EmpFamilyId)
                    .HasMaxLength(50)
                    .HasColumnName("EmpFamilyID");

                entity.Property(e => e.AddressDetails).IsRequired();

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.BloodGroupId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("BloodGroupID");

                entity.Property(e => e.BranchCode).HasMaxLength(50);

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.DateOfBirth).HasColumnType("datetime");

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.Name).IsRequired();

                entity.Property(e => e.OccupationId)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("OccupationID");

                entity.Property(e => e.Phone)
                    .IsRequired()
                    .HasMaxLength(25);

                entity.Property(e => e.RelationshipId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("RelationshipID");

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<HrmEmployeeOfficialInfo>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HRM_Empl__385EFE4806EC0AE4");

                entity.ToTable("HRM_EmployeeOfficialInfo");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.AppointmentLetterDate).HasColumnType("datetime");

                entity.Property(e => e.AppointmentLetterNo)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.AttendenceId)
                    .HasMaxLength(50)
                    .HasColumnName("AttendenceID");

                entity.Property(e => e.BranchCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CompanyCodeSession)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("CompanyCode_Session");

                entity.Property(e => e.ConfirmationRefNo).HasMaxLength(100);

                entity.Property(e => e.ConfirmeDate).HasColumnType("datetime");

                entity.Property(e => e.ContractEndDate).HasColumnType("datetime");

                entity.Property(e => e.CurrencyCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DepartmentCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DesignationCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DisbursementMethodId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DivisionCode).HasMaxLength(50);

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.EmpTypeCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.EmployeeStatus)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.EmploymentNatureId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ExpatriateBasicSalary).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ExpatriateConveyance).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ExpatriateHouseRent).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ExpatriateMedical).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.GradeCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.GrossSalary).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Hod)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("HOD");

                entity.Property(e => e.IsAttendanceBonusEligible).HasMaxLength(10);

                entity.Property(e => e.IsExpatriate).HasMaxLength(50);

                entity.Property(e => e.IsExtraDutyEligible).HasMaxLength(10);

                entity.Property(e => e.IsGovtHolidayEligible).HasMaxLength(50);

                entity.Property(e => e.IsLunchBilEligible).HasMaxLength(10);

                entity.Property(e => e.IsOverTimeEligible).HasMaxLength(10);

                entity.Property(e => e.JoiningDate).HasColumnType("datetime");

                entity.Property(e => e.JoiningSalary).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lfa)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("LFA");

                entity.Property(e => e.LineCode).HasMaxLength(50);

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.MobileAllowance).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.MobileNo)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.ModeOfPaymentInBankPercentage).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.PayId)
                    .HasMaxLength(50)
                    .HasColumnName("PayID");

                entity.Property(e => e.PaymentPeriodId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("PaymentPeriodID");

                entity.Property(e => e.ProbationEffectDate).HasColumnType("datetime");

                entity.Property(e => e.ProbationPeriod)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ProbationPeriodType)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.ReportingTo)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.SalaryScaleId)
                    .HasMaxLength(50)
                    .HasColumnName("SalaryScaleID");

                entity.Property(e => e.SectionCode).HasMaxLength(50);

                entity.Property(e => e.ShiftCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.StepNoId).HasMaxLength(50);

                entity.Property(e => e.TecnicalSkillTypeId)
                    .HasMaxLength(50)
                    .HasColumnName("TecnicalSkillTypeID");

                entity.Property(e => e.UserInfoEmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<HrmEmployeePhoto>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HRM_Empl__385EFE48F697D232");

                entity.ToTable("HRM_EmployeePhoto");

                entity.Property(e => e.AutoId).HasColumnName("autoId");

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.ImgType)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Photo)
                    .IsRequired()
                    .HasColumnType("image");
            });

            modelBuilder.Entity<HrmEmployeeQualification>(entity =>
            {
                entity.HasKey(e => e.EmpQualificationId)
                    .HasName("PK__HRM_Empl__E3D66C574F8E317C");

                entity.ToTable("HRM_EmployeeQualification");

                entity.Property(e => e.EmpQualificationId)
                    .HasMaxLength(50)
                    .HasColumnName("EmpQualificationID");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.CourseCode).HasMaxLength(50);

                entity.Property(e => e.CourseTitleCode).HasMaxLength(50);

                entity.Property(e => e.Dueration).HasMaxLength(50);

                entity.Property(e => e.DuratioinType).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.InstitueCode).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.ResultDivision).HasMaxLength(200);

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");

                entity.Property(e => e.YearofPasssing).HasMaxLength(50);
            });

            modelBuilder.Entity<HrmEmployeeReferenceInfo>(entity =>
            {
                entity.HasKey(e => e.EmpReferenceId)
                    .HasName("PK__HRM_Empl__4193CFB0340B54F5");

                entity.ToTable("HRM_EmployeeReferenceInfo");

                entity.Property(e => e.EmpReferenceId)
                    .HasMaxLength(50)
                    .HasColumnName("EmpReferenceID");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.BranchCode).HasMaxLength(50);

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.Designation).HasMaxLength(50);

                entity.Property(e => e.Email).HasMaxLength(300);

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Fax).HasMaxLength(100);

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.MobileNumber).HasMaxLength(100);

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.NationalityCode).HasMaxLength(50);

                entity.Property(e => e.OrganizationName).HasMaxLength(300);

                entity.Property(e => e.PhoneNumber).HasMaxLength(100);

                entity.Property(e => e.ReferenceName).HasMaxLength(150);

                entity.Property(e => e.RelationId)
                    .HasMaxLength(50)
                    .HasColumnName("RelationID");

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<HrmEmployeeWeekendDeclaration>(entity =>
            {
                entity.HasKey(e => e.Tc)
                    .HasName("PK__HRM_Empl__3214E4083DDC60D7");

                entity.ToTable("HRM_EmployeeWeekendDeclaration");

                entity.Property(e => e.Tc)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TC");

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Date).HasColumnType("datetime");

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ewdid)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EWDId");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.Remark)
                    .IsRequired()
                    .HasMaxLength(500);
            });

            modelBuilder.Entity<HrmIncrement>(entity =>
            {
                entity.HasKey(e => e.Tc)
                    .HasName("PK__HRM_Incr__3214E408162F076A");

                entity.ToTable("HRM_Increment");

                entity.Property(e => e.Tc)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TC");

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.CurrExpatriateBasicSalary)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Curr_ExpatriateBasicSalary");

                entity.Property(e => e.CurrExpatriateConveyance)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Curr_ExpatriateConveyance");

                entity.Property(e => e.CurrExpatriateFcp)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Curr_ExpatriateFCP");

                entity.Property(e => e.CurrExpatriateHouseRent)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Curr_ExpatriateHouseRent");

                entity.Property(e => e.CurrExpatriateMedical)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Curr_ExpatriateMedical");

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.IncAmount).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.IncLetterDate).HasColumnType("datetime");

                entity.Property(e => e.IncLetterNo)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.IncType).HasMaxLength(50);

                entity.Property(e => e.IncrementId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.MonthName).HasMaxLength(50);

                entity.Property(e => e.PreExpatriateBasicSalary)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Pre_ExpatriateBasicSalary");

                entity.Property(e => e.PreExpatriateConveyance)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Pre_ExpatriateConveyance");

                entity.Property(e => e.PreExpatriateFcp)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Pre_ExpatriateFCP");

                entity.Property(e => e.PreExpatriateHouseRent)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Pre_ExpatriateHouseRent");

                entity.Property(e => e.PreExpatriateMedical)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Pre_ExpatriateMedical");

                entity.Property(e => e.PresentSalary).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.PreviousSalary).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.Remark)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.Wef)
                    .HasColumnType("datetime")
                    .HasColumnName("WEF");

                entity.Property(e => e.Year)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<HrmItemMasterInformation>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HRM_ItemMasterInformation");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.BrandId).HasColumnName("BrandID");

                entity.Property(e => e.CatagoryId)
                    .HasMaxLength(50)
                    .HasColumnName("CatagoryID");

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.ProductCode).HasMaxLength(50);

                entity.Property(e => e.ProductName).HasMaxLength(200);

                entity.Property(e => e.PurchaseCost).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.UnitId)
                    .HasMaxLength(50)
                    .HasColumnName("UnitID");

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<HrmLeaveApplicationDays>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HRM_Leav__385EFE4883A69E49");

                entity.ToTable("HRM_LeaveApplicationDays");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.Days)
                    .HasColumnType("datetime")
                    .HasColumnName("days");

                entity.Property(e => e.LeaveAppEntryId)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<HrmLeaveApplicationEntry>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HRM_Leav__6B232905A742958B");

                entity.ToTable("HRM_LeaveApplicationEntry");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.ApplyLeaveFormat).HasMaxLength(50);

                entity.Property(e => e.BossEmpAutoId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.ConfirmationRemarks)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.FirstOrSecondHalf)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.HalfDay)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Hod)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("HOD");

                entity.Property(e => e.HodapprovalRemarks)
                    .IsRequired()
                    .HasColumnName("HODApprovalRemarks");

                entity.Property(e => e.HodapprovalStatus)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("HODApprovalStatus");

                entity.Property(e => e.HrapprovalRemarks)
                    .IsRequired()
                    .HasColumnName("HRApprovalRemarks");

                entity.Property(e => e.HrapprovalStatus)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("HRApprovalStatus");

                entity.Property(e => e.IsApproved)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.LeaveAppEntryId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.LeaveApplyProcess)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.LeaveTypeId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.NoOfDay).HasColumnType("decimal(10, 1)");

                entity.Property(e => e.Reason)
                    .IsRequired()
                    .HasMaxLength(1000);

                entity.Property(e => e.ShortLeaveFrom).HasColumnType("datetime");

                entity.Property(e => e.ShortLeaveTo).HasColumnType("datetime");

                entity.Property(e => e.SickLeaveFilePath).HasMaxLength(200);

                entity.Property(e => e.StartDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<HrmModel>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HRM_Mode__385EFE4845C27DDF");

                entity.ToTable("HRM_Model");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.BrandId)
                    .HasMaxLength(50)
                    .HasColumnName("BrandID");

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModelId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("ModelID");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.ShortName).HasMaxLength(100);

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<HrmNomineePhoto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HRM_NomineePhoto");

                entity.Property(e => e.AutoId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.ImgType)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.NomineeId)
                    .HasMaxLength(50)
                    .HasColumnName("NomineeID");

                entity.Property(e => e.Photo)
                    .IsRequired()
                    .HasColumnType("image");
            });

            modelBuilder.Entity<HrmNomineeSignature>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HRM_NomineeSignature");

                entity.Property(e => e.AutoId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.ImgType)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.NomineeId)
                    .HasMaxLength(50)
                    .HasColumnName("NomineeID");

                entity.Property(e => e.Photo)
                    .IsRequired()
                    .HasColumnType("image");
            });

            modelBuilder.Entity<HrmPayAdvancePay>(entity =>
            {
                entity.HasKey(e => e.AdvancePayCode)
                    .HasName("PK__HRM_PAY___9ACB83C80108D57B");

                entity.ToTable("HRM_PAY_AdvancePay");

                entity.Property(e => e.AdvancePayCode)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AdjustmentType).HasMaxLength(50);

                entity.Property(e => e.AdvanceAdjustStatus)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.AdvanceAmount).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.AdvancePayId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.LoanId)
                    .HasMaxLength(50)
                    .HasColumnName("LoanID");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.MonthlyDeduction).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.NoOfPaymentInstallment)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.PayHeadNameId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Remarks)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.SalaryMonth)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.SalaryYear)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<HrmPayLoanTypeEntry>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HRM_PAY___6B232965C7E65C0B");

                entity.ToTable("HRM_PAY_LoanTypeEntry");

                entity.Property(e => e.AutoId).HasColumnName("AutoID");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.LoanType).HasMaxLength(100);

                entity.Property(e => e.LoanTypeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("LoanTypeID");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.ShortName).HasMaxLength(50);
            });

            modelBuilder.Entity<HrmPayMonth>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HRM_PAY_Month");

                entity.Property(e => e.MonthName)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.MonthNameBangla)
                    .HasMaxLength(50)
                    .HasColumnName("MonthName_Bangla");
            });

            modelBuilder.Entity<HrmPayPayHeadName>(entity =>
            {
                entity.HasKey(e => e.PayHeadNameCode)
                    .HasName("PK__HRM_PAY___11AD73ED2674F0CE");

                entity.ToTable("HRM_PAY_PayHeadName");

                entity.Property(e => e.PayHeadNameCode)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.LoanTypeId)
                    .HasMaxLength(50)
                    .HasColumnName("LoanTypeID");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.PayHeadNameId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Wef)
                    .HasColumnType("datetime")
                    .HasColumnName("WEF");
            });

            modelBuilder.Entity<HrmPayTaxAdjustmentEntry>(entity =>
            {
                entity.HasKey(e => e.TaxAdjustmentCode)
                    .HasName("PK__HRM_PAY___520280CD7F10A7A3");

                entity.ToTable("HRM_PAY_TaxAdjustmentEntry");

                entity.Property(e => e.TaxAdjustmentCode)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.ApprovedStatus)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.NoOfMonths)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Remark)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.SalaryMonth)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.SalaryYear)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.TaxAdjustmentId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.TaxDeductionAmount).HasColumnType("decimal(10, 2)");
            });

            modelBuilder.Entity<HrmPayrollLoan>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HRM_Payr__6B232965EF4525F0");

                entity.ToTable("HRM_Payroll_Loan");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("AutoID");

                entity.Property(e => e.BankAccount).HasMaxLength(100);

                entity.Property(e => e.BankId).HasMaxLength(15);

                entity.Property(e => e.ChequeDate).HasColumnType("datetime");

                entity.Property(e => e.ChequeNo).HasMaxLength(50);

                entity.Property(e => e.CompanyCode).HasMaxLength(10);

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.LoanAmount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.LoanDate).HasColumnType("datetime");

                entity.Property(e => e.LoanId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("LoanID");

                entity.Property(e => e.LoanTypeId)
                    .HasMaxLength(15)
                    .HasColumnName("LoanTypeID");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.MonthlyDeduction).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.NoOfInstallment).HasMaxLength(10);

                entity.Property(e => e.PayHeadNameId).HasMaxLength(15);

                entity.Property(e => e.PaymentModeId)
                    .HasMaxLength(15)
                    .HasColumnName("PaymentModeID");

                entity.Property(e => e.ReasonOfLoanTaken)
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Remarks).HasMaxLength(500);

                entity.Property(e => e.StartDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<HrmPayrollPaymentReceive>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__HRM_Payr__6B232965282B432A");

                entity.ToTable("HRM_Payroll_PaymentReceive");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("AutoID");

                entity.Property(e => e.BankAccount).HasMaxLength(100);

                entity.Property(e => e.BankId).HasMaxLength(15);

                entity.Property(e => e.ChequeDate).HasColumnType("datetime");

                entity.Property(e => e.ChequeNo).HasMaxLength(50);

                entity.Property(e => e.CompanyCode).HasMaxLength(10);

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.EntryUserId)
                    .HasMaxLength(50)
                    .HasColumnName("EntryUserID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.LoanId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("LoanID");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.PaymentAmount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PaymentDate).HasColumnType("datetime");

                entity.Property(e => e.PaymentId).HasMaxLength(50);

                entity.Property(e => e.PaymentModeId)
                    .HasMaxLength(15)
                    .HasColumnName("PaymentModeID");

                entity.Property(e => e.Remarks).HasMaxLength(500);
            });

            modelBuilder.Entity<HrmPayrollPfassignEntry>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK_HRM_Payroll_PFAssignEntry_1");

                entity.ToTable("HRM_Payroll_PFAssignEntry");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.ApprovalRemark).HasMaxLength(250);

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Efdate)
                    .HasColumnType("datetime")
                    .HasColumnName("EFDate");

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.PfapprovedStatus)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("PFApprovedStatus");

                entity.Property(e => e.PfassignId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("PFAssignID");
            });

            modelBuilder.Entity<HrmRosterScheduleEntry>(entity =>
            {
                entity.HasKey(e => e.Tc)
                    .HasName("PK_HRM_RosterScheduleEntry_1");

                entity.ToTable("HRM_RosterScheduleEntry");

                entity.Property(e => e.Tc)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TC");

                entity.Property(e => e.ApprovalDatetime).HasColumnType("datetime");

                entity.Property(e => e.ApprovalStatus).HasMaxLength(50);

                entity.Property(e => e.ApprovedBy).HasMaxLength(100);

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Date).HasColumnType("datetime");

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.EmployeeIdSao)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID_SAO");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyBy).HasMaxLength(50);

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.Remark)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.RosterScheduleId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ShiftCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Weekend)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<HrmSeparation>(entity =>
            {
                entity.HasKey(e => e.SeparationId)
                    .HasName("PK__HRM_Sepa__3850A09C7A85CA46");

                entity.ToTable("HRM_Separation");

                entity.Property(e => e.SeparationId).HasMaxLength(50);

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.FinalPayment).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.IsPaid)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.RefLetterDate).HasColumnType("datetime");

                entity.Property(e => e.RefLetterNo).HasMaxLength(50);

                entity.Property(e => e.Remark)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.SeparationCode)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.SeparationDate).HasColumnType("datetime");

                entity.Property(e => e.SeparationTypeId)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<HrmSize>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HRM_Size");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.ShortName).HasMaxLength(100);

                entity.Property(e => e.SizeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("SizeID");

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<InvCatagory>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("INV_Catagory");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.CatagoryId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("CatagoryID");

                entity.Property(e => e.CompanyCode).HasMaxLength(10);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.ShortName).HasMaxLength(100);

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<InvDefFactory>(entity =>
            {
                entity.HasKey(e => e.FactoryId)
                    .HasName("PK__Inv_Def___732C8F9DF471953C");

                entity.ToTable("Inv_Def_Factory");

                entity.Property(e => e.FactoryId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FactoryID");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.ContactPerson)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ContactPersonEmail)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ContactPersonPhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerId)
                    .HasMaxLength(50)
                    .HasColumnName("CustomerID");

                entity.Property(e => e.Designation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FactoryAddess)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.FactoryCode).ValueGeneratedOnAdd();

                entity.Property(e => e.FactoryName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(100)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(100)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(100)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<InvDefLocation>(entity =>
            {
                entity.HasKey(e => e.LocationId)
                    .HasName("PK__Inv_Def___E7FEA4776DEAF529");

                entity.ToTable("Inv_Def_Location");

                entity.Property(e => e.LocationId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LocationID");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.ContactPerson)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ContactPersonEmail)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ContactPersonPhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Designation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(100)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(100)
                    .HasColumnName("LMAC");

                entity.Property(e => e.LocationAddess)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.LocationCode).ValueGeneratedOnAdd();

                entity.Property(e => e.LocationName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Luser)
                    .HasMaxLength(100)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<InvDefSupplierType>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Inv_Def_SupplierType");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.CompanyCode).HasMaxLength(10);

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.ShortName).HasMaxLength(100);

                entity.Property(e => e.SupplierType)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.SupplierTypeId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<InvDefWarehouse>(entity =>
            {
                entity.HasKey(e => e.WarehouseId)
                    .HasName("PK__Inv_Def___2608AFD91C1EDFF1");

                entity.ToTable("Inv_Def_Warehouse");

                entity.Property(e => e.WarehouseId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WarehouseID");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.ContactPerson)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ContactPersonEmail)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ContactPersonPhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerId)
                    .HasMaxLength(50)
                    .HasColumnName("CustomerID");

                entity.Property(e => e.Designation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(100)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(100)
                    .HasColumnName("LMAC");

                entity.Property(e => e.LocationType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Luser)
                    .HasMaxLength(100)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.WarehouseAddess)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.WarehouseCode).ValueGeneratedOnAdd();

                entity.Property(e => e.WarehouseName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<InvProductIssueInformation>(entity =>
            {
                entity.HasKey(e => e.Tc)
                    .HasName("PK__INV_Prod__3214E408A1439AEE");

                entity.ToTable("INV_ProductIssueInformation");

                entity.Property(e => e.Tc)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TC");

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DepartmentCode).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.FloorCode).HasMaxLength(50);

                entity.Property(e => e.IssueDate).HasColumnType("datetime");

                entity.Property(e => e.IssueNo)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.IssuedBy).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.MainCompanyCode).HasMaxLength(50);

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.UserInfoEmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<InvProductIssueInformationDetails>(entity =>
            {
                entity.HasKey(e => e.Tc)
                    .HasName("PK__INV_Prod__3214E408C2C4964A");

                entity.ToTable("INV_ProductIssueInformationDetails");

                entity.Property(e => e.Tc)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TC");

                entity.Property(e => e.BrandId)
                    .HasMaxLength(50)
                    .HasColumnName("BrandID");

                entity.Property(e => e.FloorCode).HasMaxLength(50);

                entity.Property(e => e.IssueNo)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.IssueQty).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModelId)
                    .HasMaxLength(50)
                    .HasColumnName("ModelID");

                entity.Property(e => e.Pidid)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("PIDID");

                entity.Property(e => e.ProductCode).HasMaxLength(50);

                entity.Property(e => e.SizeId)
                    .HasMaxLength(50)
                    .HasColumnName("SizeID");

                entity.Property(e => e.StockQty).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.UnitTypId)
                    .HasMaxLength(50)
                    .HasColumnName("UnitTypID");
            });

            modelBuilder.Entity<InvProductIssueInformationDetailsTemp>(entity =>
            {
                entity.HasKey(e => e.Tc)
                    .HasName("PK__INV_Prod__3214E40866F8C14B");

                entity.ToTable("INV_ProductIssueInformationDetailsTemp");

                entity.Property(e => e.Tc)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TC");

                entity.Property(e => e.BrandId)
                    .HasMaxLength(50)
                    .HasColumnName("BrandID");

                entity.Property(e => e.FloorCode).HasMaxLength(50);

                entity.Property(e => e.IssueNo)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.IssueQty).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModelId)
                    .HasMaxLength(50)
                    .HasColumnName("ModelID");

                entity.Property(e => e.Pidid)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("PIDID");

                entity.Property(e => e.ProductCode).HasMaxLength(50);

                entity.Property(e => e.SizeId)
                    .HasMaxLength(50)
                    .HasColumnName("SizeID");

                entity.Property(e => e.StockQty).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.UnitTypId)
                    .HasMaxLength(50)
                    .HasColumnName("UnitTypID");
            });

            modelBuilder.Entity<InvSalesInvoiceInfo>(entity =>
            {
                entity.HasKey(e => e.AutoId);

                entity.ToTable("Inv_SalesInvoiceInfo");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BookingType).HasMaxLength(50);

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.CustomerId)
                    .HasMaxLength(50)
                    .HasColumnName("CustomerID");

                entity.Property(e => e.Discount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.InvoiceDate).HasColumnType("datetime");

                entity.Property(e => e.InvoiceNo).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.MainCompanyCode)
                    .HasMaxLength(50)
                    .HasColumnName("Main_CompanyCode");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.TaxAmount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TaxPercentage).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TbreceiveNo).HasColumnName("TBReceiveNO");

                entity.Property(e => e.TbreceivedDateTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TBReceivedDateTime");

                entity.Property(e => e.TotalBill).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");

                entity.Property(e => e.VatAmount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.VatPercentage).HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<InvSalesInvoiceInfoDetails>(entity =>
            {
                entity.HasKey(e => e.Sidid);

                entity.ToTable("Inv_SalesInvoiceInfoDetails");

                entity.Property(e => e.Sidid)
                    .HasMaxLength(50)
                    .HasColumnName("SIDID");

                entity.Property(e => e.Amount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.DemurrageCharge).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Discount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ExportDropOfId)
                    .HasMaxLength(50)
                    .HasColumnName("ExportDropOfID");

                entity.Property(e => e.ExportPickupId)
                    .HasMaxLength(50)
                    .HasColumnName("ExportPickupID");

                entity.Property(e => e.ImportDropOfId)
                    .HasMaxLength(50)
                    .HasColumnName("ImportDropOfID");

                entity.Property(e => e.ImportPickupId)
                    .HasMaxLength(50)
                    .HasColumnName("ImportPickupID");

                entity.Property(e => e.InvoiceNo)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.Rate).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ShadeId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ShadeID");

                entity.Property(e => e.SlNo).HasMaxLength(50);

                entity.Property(e => e.Tc)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TC");

                entity.Property(e => e.TransportTypeId)
                    .HasMaxLength(50)
                    .HasColumnName("TransportTypeID");

                entity.Property(e => e.UnloadingDateTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<Logs>(entity =>
            {
                entity.Property(e => e.TimeStamp).HasColumnType("datetime");
            });

            modelBuilder.Entity<PaymentReceive>(entity =>
            {
                entity.Property(e => e.PaymentReceiveId)
                    .HasMaxLength(50)
                    .HasColumnName("PaymentReceiveID");

                entity.Property(e => e.Amount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("AutoID");

                entity.Property(e => e.ChequeDate).HasColumnType("datetime");

                entity.Property(e => e.ChequeNo).HasMaxLength(50);

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CustomerBank).HasMaxLength(50);

                entity.Property(e => e.CustomerId)
                    .HasMaxLength(50)
                    .HasColumnName("CustomerID");

                entity.Property(e => e.DepositedAcno)
                    .HasMaxLength(50)
                    .HasColumnName("DepositedACNo");

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.MainCompanyCode)
                    .HasMaxLength(50)
                    .HasColumnName("Main_CompanyCode");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.PaymentReceiveDate).HasColumnType("datetime");

                entity.Property(e => e.PaymentTypeId)
                    .HasMaxLength(50)
                    .HasColumnName("PaymentTypeID");

                entity.Property(e => e.Receivedby).HasMaxLength(50);

                entity.Property(e => e.Remarks).HasMaxLength(200);
            });

            modelBuilder.Entity<PaymentReceiveDetails>(entity =>
            {
                entity.HasKey(e => e.AutoId);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Amount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.CustomerId)
                    .HasMaxLength(100)
                    .HasColumnName("CustomerID");

                entity.Property(e => e.InvoiceNo).HasMaxLength(100);

                entity.Property(e => e.PaymentReceiveId)
                    .HasMaxLength(100)
                    .HasColumnName("PaymentReceiveID");
            });

            modelBuilder.Entity<PosPaymentType>(entity =>
            {
                entity.HasKey(e => e.Tc)
                    .HasName("PK__POS_Paym__3214E408DF1F0198");

                entity.ToTable("POS_PaymentType");

                entity.Property(e => e.Tc)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TC");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(100)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(100)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(100)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.PaymentName).HasMaxLength(200);

                entity.Property(e => e.PaymentTypeId)
                    .HasMaxLength(50)
                    .HasColumnName("PaymentTypeID");
            });

            modelBuilder.Entity<PosTermsCondition>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__Pos_Term__6B232965B50D57F6");

                entity.ToTable("Pos_TermsCondition");

                entity.Property(e => e.AutoId).HasColumnName("AutoID");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.TermUsed).HasMaxLength(50);

                entity.Property(e => e.TermsConditionId)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.TermsConditionName)
                    .IsRequired()
                    .HasMaxLength(500);
            });

            modelBuilder.Entity<PosTrType>(entity =>
            {
                entity.HasKey(e => e.TrTypeId)
                    .HasName("PK__POS_TrTy__CE1FA55294E25799");

                entity.ToTable("POS_TrType");

                entity.Property(e => e.TrTypeId)
                    .HasMaxLength(50)
                    .HasColumnName("TrTypeID");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(100)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(100)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(100)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.Tc)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TC");

                entity.Property(e => e.TrTypeName).IsRequired();
            });

            modelBuilder.Entity<RmgProdDefUnitType>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RMG_Prod_Def_UnitType");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.ShortName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Tc)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TC");

                entity.Property(e => e.UnitTypId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UnitTypID");

                entity.Property(e => e.UnitTypeName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RmgPurchaseOrderReceive>(entity =>
            {
                entity.HasKey(e => e.Tc);

                entity.ToTable("RMG_PurchaseOrderReceive");

                entity.Property(e => e.Tc)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TC");

                entity.Property(e => e.ChallanDate).HasColumnType("datetime");

                entity.Property(e => e.ChallanNo).HasMaxLength(50);

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DepartmentCode).HasMaxLength(50);

                entity.Property(e => e.EmployeeIdReceiveBy)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID_ReceiveBy");

                entity.Property(e => e.InvoiceDate).HasColumnType("datetime");

                entity.Property(e => e.InvoiceNo).HasMaxLength(50);

                entity.Property(e => e.InvoiceValue).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.MainCompanyCode).HasMaxLength(50);

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.PurchaseReceiveNo)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ReceiveDate).HasColumnType("datetime");

                entity.Property(e => e.SupplierId)
                    .HasMaxLength(50)
                    .HasColumnName("SupplierID");

                entity.Property(e => e.TotalAmount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.UserInfoEmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<RmgPurchaseOrderReceiveDetails>(entity =>
            {
                entity.HasKey(e => e.Tc)
                    .HasName("PK__RMG_Purc__3214E4089BA8BAFE");

                entity.ToTable("RMG_PurchaseOrderReceiveDetails");

                entity.Property(e => e.Tc)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TC");

                entity.Property(e => e.BrandId)
                    .HasMaxLength(50)
                    .HasColumnName("BrandID");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModelId)
                    .HasMaxLength(50)
                    .HasColumnName("ModelID");

                entity.Property(e => e.ProductCode).HasMaxLength(50);

                entity.Property(e => e.PurchaseOrderReceiveDetailsId)
                    .HasMaxLength(50)
                    .HasColumnName("PurchaseOrderReceiveDetailsID");

                entity.Property(e => e.PurchaseReceiveNo)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ReqQty).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.SizeId)
                    .HasMaxLength(50)
                    .HasColumnName("SizeID");

                entity.Property(e => e.Slno).HasColumnName("SLNO");

                entity.Property(e => e.TotalPrice).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.UnitPrice).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.UnitTypId)
                    .HasMaxLength(50)
                    .HasColumnName("UnitTypID");

                entity.Property(e => e.WarrantyPeriod).HasMaxLength(50);

                entity.Property(e => e.WarrentyTypeId)
                    .HasMaxLength(10)
                    .HasColumnName("WarrentyTypeID");
            });

            modelBuilder.Entity<SalesContactPerson>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Sales_ContactPerson");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.ContactPersonEmail)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.ContactPersonMobile)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ContactPersonName)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.Cpid)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("CPID");

                entity.Property(e => e.DesignationCode).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<SalesCustomer>(entity =>
            {
                entity.HasKey(e => e.CustomerId)
                    .HasName("PK__Sales_Cu__A4AE64B857932738");

                entity.ToTable("Sales_Customer");

                entity.Property(e => e.CustomerId)
                    .HasMaxLength(50)
                    .HasColumnName("CustomerID");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Bin)
                    .HasMaxLength(50)
                    .HasColumnName("BIN");

                entity.Property(e => e.Category).HasMaxLength(50);

                entity.Property(e => e.ContatPerson1).HasMaxLength(50);

                entity.Property(e => e.ContatPerson2).HasMaxLength(50);

                entity.Property(e => e.ContatPerson3).HasMaxLength(50);

                entity.Property(e => e.CountryId).HasMaxLength(50);

                entity.Property(e => e.CreditLimit)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("CreditLImit");

                entity.Property(e => e.CustomerCompany).HasMaxLength(50);

                entity.Property(e => e.CustomerName).HasMaxLength(50);

                entity.Property(e => e.CustomerSectorId).HasMaxLength(50);

                entity.Property(e => e.CustomerType).HasMaxLength(50);

                entity.Property(e => e.DamageCost).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Designation1).HasMaxLength(50);

                entity.Property(e => e.Designation2).HasMaxLength(50);

                entity.Property(e => e.Designation3).HasMaxLength(50);

                entity.Property(e => e.DistrictsId)
                    .HasMaxLength(100)
                    .HasColumnName("DistrictsID");

                entity.Property(e => e.Email).HasMaxLength(50);

                entity.Property(e => e.Email1).HasMaxLength(150);

                entity.Property(e => e.Email2).HasMaxLength(150);

                entity.Property(e => e.Email3).HasMaxLength(150);

                entity.Property(e => e.Fax)
                    .HasMaxLength(150)
                    .HasColumnName("FAX");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(90)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(150)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(90)
                    .HasColumnName("LUser");

                entity.Property(e => e.OpeningBalance).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.OpeningDate).HasColumnType("datetime");

                entity.Property(e => e.Phone).HasMaxLength(50);

                entity.Property(e => e.Phone1)
                    .HasMaxLength(50)
                    .HasColumnName("phone1");

                entity.Property(e => e.Phone2)
                    .HasMaxLength(50)
                    .HasColumnName("phone2");

                entity.Property(e => e.Phone3)
                    .HasMaxLength(50)
                    .HasColumnName("phone3");

                entity.Property(e => e.Place).HasMaxLength(100);

                entity.Property(e => e.SalesPersonId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SalesPersonID");

                entity.Property(e => e.Tin)
                    .HasMaxLength(50)
                    .HasColumnName("TIN");

                entity.Property(e => e.Url)
                    .HasMaxLength(150)
                    .HasColumnName("URL");

                entity.Property(e => e.Vat)
                    .HasMaxLength(50)
                    .HasColumnName("VAT");
            });

            modelBuilder.Entity<SalesDefBankBranchInfo>(entity =>
            {
                entity.HasKey(e => e.BankBranchId)
                    .HasName("PK__Sales_De__135DBA957B4D43EB");

                entity.ToTable("Sales_Def_BankBranchInfo");

                entity.Property(e => e.BankBranchId)
                    .HasMaxLength(50)
                    .HasColumnName("BankBranchID");

                entity.Property(e => e.Address).HasMaxLength(250);

                entity.Property(e => e.AutoId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.BankBranchName).HasMaxLength(50);

                entity.Property(e => e.BankId)
                    .HasMaxLength(50)
                    .HasColumnName("BankID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(150)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(250)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(100)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.Phone).HasMaxLength(250);

                entity.Property(e => e.ShortName).HasMaxLength(50);

                entity.Property(e => e.Swiftcode)
                    .HasMaxLength(50)
                    .HasColumnName("SWIFTCode");
            });

            modelBuilder.Entity<SalesDefBankInfo>(entity =>
            {
                entity.HasKey(e => e.BankId)
                    .HasName("PK__SALES_De__AA08CB33DCC22D65");

                entity.ToTable("SALES_Def_BankInfo");

                entity.Property(e => e.BankId)
                    .HasMaxLength(50)
                    .HasColumnName("BankID");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(150)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(250)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(100)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.ShortName).HasMaxLength(50);
            });

            modelBuilder.Entity<SalesDefCompanyFor>(entity =>
            {
                entity.HasKey(e => e.Cfid)
                    .HasName("PK__Sales_De__F54E0D5C374D55F2");

                entity.ToTable("Sales_Def_CompanyFor");

                entity.Property(e => e.Cfid)
                    .HasMaxLength(50)
                    .HasColumnName("CFID");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("AutoID");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.CompanyFor).HasMaxLength(200);

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.ShortName).HasMaxLength(100);

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<SalesDefCompanyInfo>(entity =>
            {
                entity.HasKey(e => e.CompanyId)
                    .HasName("PK__Sales_De__2D971C4CC7924D71");

                entity.ToTable("Sales_Def_CompanyInfo");

                entity.Property(e => e.CompanyId)
                    .HasMaxLength(50)
                    .HasColumnName("CompanyID");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("AutoID");

                entity.Property(e => e.Cfid)
                    .HasMaxLength(50)
                    .HasColumnName("CFID");

                entity.Property(e => e.City).HasMaxLength(50);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.CompanyName).HasMaxLength(200);

                entity.Property(e => e.CountryId)
                    .HasMaxLength(100)
                    .HasColumnName("CountryID");

                entity.Property(e => e.Cpid)
                    .HasMaxLength(200)
                    .HasColumnName("CPID");

                entity.Property(e => e.Email).HasMaxLength(50);

                entity.Property(e => e.Fax)
                    .HasMaxLength(150)
                    .HasColumnName("FAX");

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.Phone).HasMaxLength(50);

                entity.Property(e => e.ShortName).HasMaxLength(100);

                entity.Property(e => e.State).HasMaxLength(100);

                entity.Property(e => e.Url)
                    .HasMaxLength(150)
                    .HasColumnName("URL");

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");

                entity.Property(e => e.ZipCode).HasMaxLength(50);
            });

            modelBuilder.Entity<SalesDefDemurrageCharges>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__Sales_De__6B232965DCC80A1E");

                entity.ToTable("Sales_Def_DemurrageCharges");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("AutoID");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.CustomerId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("CustomerID");

                entity.Property(e => e.DemurrageCharge).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.TransportTypeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("TransportTypeID");

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<SalesDefDeportInfo>(entity =>
            {
                entity.HasKey(e => e.DeportId)
                    .HasName("PK__Sales_De__D74D3DBEC0E28FD0");

                entity.ToTable("Sales_Def_DeportInfo");

                entity.Property(e => e.DeportId)
                    .HasMaxLength(50)
                    .HasColumnName("DeportID");

                entity.Property(e => e.Address).HasMaxLength(500);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("AutoID");

                entity.Property(e => e.City).HasMaxLength(100);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.CountryId)
                    .HasMaxLength(50)
                    .HasColumnName("CountryID");

                entity.Property(e => e.Cpid)
                    .HasMaxLength(50)
                    .HasColumnName("CPID");

                entity.Property(e => e.DeportName).HasMaxLength(200);

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.Remarks).HasMaxLength(500);

                entity.Property(e => e.State).HasMaxLength(100);

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");

                entity.Property(e => e.ZipCode).HasMaxLength(100);
            });

            modelBuilder.Entity<SalesDefDriverInformation>(entity =>
            {
                entity.HasKey(e => e.DriverId)
                    .HasName("PK__Sales_De__F1B1CD2419409EA9");

                entity.ToTable("Sales_Def_DriverInformation");

                entity.Property(e => e.DriverId)
                    .HasMaxLength(50)
                    .HasColumnName("DriverID");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("AutoID");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.CompanyId)
                    .HasMaxLength(50)
                    .HasColumnName("CompanyID");

                entity.Property(e => e.Dob)
                    .HasColumnType("datetime")
                    .HasColumnName("DOB");

                entity.Property(e => e.DriverName).HasMaxLength(200);

                entity.Property(e => e.Email).HasMaxLength(100);

                entity.Property(e => e.ExpiryDate).HasColumnType("datetime");

                entity.Property(e => e.IssueDate).HasColumnType("datetime");

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.LicenseCategory).HasMaxLength(100);

                entity.Property(e => e.LicenseNo).HasMaxLength(50);

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.Nid)
                    .HasMaxLength(50)
                    .HasColumnName("NID");

                entity.Property(e => e.Phone).HasMaxLength(50);

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<SalesDefPaymentMode>(entity =>
            {
                entity.HasKey(e => e.PaymentModeId)
                    .HasName("PK__Sales_De__F9599529B899F3E3");

                entity.ToTable("Sales_Def_PaymentMode");

                entity.Property(e => e.PaymentModeId)
                    .HasMaxLength(50)
                    .HasColumnName("PaymentModeID");

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.PaymentModeName).HasMaxLength(250);

                entity.Property(e => e.PaymentModeShortName).HasMaxLength(50);
            });

            modelBuilder.Entity<SalesDefPaymentTerms>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__Sales_De__6B2329651A650C5F");

                entity.ToTable("Sales_Def_PaymentTerms");

                entity.Property(e => e.AutoId).HasColumnName("AutoID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.PaymentTermsId).HasMaxLength(50);

                entity.Property(e => e.PaymentTermsName).HasMaxLength(50);

                entity.Property(e => e.Percentise).HasMaxLength(50);

                entity.Property(e => e.Type).HasMaxLength(50);
            });

            modelBuilder.Entity<SalesDefPaymentType>(entity =>
            {
                entity.HasKey(e => e.PaymentTypeId);

                entity.ToTable("Sales_Def_PaymentType");

                entity.Property(e => e.PaymentTypeId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PaymentTypeID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.PaymentType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ShortName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Tc)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TC");
            });

            modelBuilder.Entity<SalesDefPortInfo>(entity =>
            {
                entity.HasKey(e => e.PortId)
                    .HasName("PK__Sales_De__D859BFAF53BA4255");

                entity.ToTable("Sales_Def_PortInfo");

                entity.Property(e => e.PortId)
                    .HasMaxLength(50)
                    .HasColumnName("PortID");

                entity.Property(e => e.Address).HasMaxLength(500);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("AutoID");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.CountryId)
                    .HasMaxLength(50)
                    .HasColumnName("CountryID");

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.PortName).HasMaxLength(200);

                entity.Property(e => e.PortTypeId)
                    .HasMaxLength(50)
                    .HasColumnName("PortTypeID");

                entity.Property(e => e.ShortName).HasMaxLength(100);

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<SalesDefPortType>(entity =>
            {
                entity.HasKey(e => e.PortTypeId)
                    .HasName("PK__Sales_De__BB11B32C0AF0194D");

                entity.ToTable("Sales_Def_PortType");

                entity.Property(e => e.PortTypeId)
                    .HasMaxLength(50)
                    .HasColumnName("PortTypeID");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("AutoID");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.PortType).HasMaxLength(100);

                entity.Property(e => e.ShortName).HasMaxLength(50);

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<SalesDefPortsShadeInfo>(entity =>
            {
                entity.HasKey(e => e.ShadeId)
                    .HasName("PK__Sales_De__4BB4CCE7F55A78C4");

                entity.ToTable("Sales_Def_PortsShadeInfo");

                entity.Property(e => e.ShadeId)
                    .HasMaxLength(50)
                    .HasColumnName("ShadeID");

                entity.Property(e => e.Address).HasMaxLength(500);

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("AutoID");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.PortId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("PortID");

                entity.Property(e => e.ShadeName).HasMaxLength(200);

                entity.Property(e => e.ShortName).HasMaxLength(100);

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<SalesDefReferenceType>(entity =>
            {
                entity.HasKey(e => e.ReferenceId)
                    .HasName("PK__Sales_De__E1A99A7909EAEEA7");

                entity.ToTable("Sales_Def_ReferenceType");

                entity.Property(e => e.ReferenceId)
                    .HasMaxLength(50)
                    .HasColumnName("ReferenceID");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("AutoID");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.ReferenceType).HasMaxLength(100);

                entity.Property(e => e.ShortName).HasMaxLength(50);

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<SalesDefTransportRate>(entity =>
            {
                entity.HasKey(e => e.TransportRateId)
                    .HasName("PK__Sales_De__2B01C14C11F9D4DD");

                entity.ToTable("Sales_Def_TransportRate");

                entity.Property(e => e.TransportRateId)
                    .HasMaxLength(50)
                    .HasColumnName("TransportRateID");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("AutoID");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.DistanceFrom).HasMaxLength(200);

                entity.Property(e => e.DistanceTo).HasMaxLength(200);

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.TransportRate).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<SalesDefTransportType>(entity =>
            {
                entity.HasKey(e => e.TransportTypeId)
                    .HasName("PK__Sales_De__D69386042CE845D7");

                entity.ToTable("Sales_Def_TransportType");

                entity.Property(e => e.TransportTypeId)
                    .HasMaxLength(50)
                    .HasColumnName("TransportTypeID");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("AutoID");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.ShortName).HasMaxLength(50);

                entity.Property(e => e.TransportType).HasMaxLength(100);

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<SalesSupplier>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Sales_Supplier");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("autoId");

                entity.Property(e => e.BinNo).HasMaxLength(50);

                entity.Property(e => e.CompanyCode)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.ContactEmail).HasMaxLength(50);

                entity.Property(e => e.ContactPerson).HasMaxLength(300);

                entity.Property(e => e.ContactPhone).HasMaxLength(50);

                entity.Property(e => e.ContatPerson1).HasMaxLength(50);

                entity.Property(e => e.ContatPerson2).HasMaxLength(50);

                entity.Property(e => e.CountryId).HasMaxLength(50);

                entity.Property(e => e.CreditLimit)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("CreditLImit");

                entity.Property(e => e.Designation1).HasMaxLength(50);

                entity.Property(e => e.Designation2).HasMaxLength(50);

                entity.Property(e => e.DistrictsId)
                    .HasMaxLength(100)
                    .HasColumnName("DistrictsID");

                entity.Property(e => e.Email).HasMaxLength(100);

                entity.Property(e => e.Email1).HasMaxLength(150);

                entity.Property(e => e.Email2).HasMaxLength(150);

                entity.Property(e => e.Fax)
                    .HasMaxLength(150)
                    .HasColumnName("FAX");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");

                entity.Property(e => e.OpeningBalance).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Phone).HasMaxLength(50);

                entity.Property(e => e.Phone1)
                    .HasMaxLength(50)
                    .HasColumnName("phone1");

                entity.Property(e => e.Phone2)
                    .HasMaxLength(50)
                    .HasColumnName("phone2");

                entity.Property(e => e.Place).HasMaxLength(100);

                entity.Property(e => e.Remarks).HasMaxLength(200);

                entity.Property(e => e.SupplierId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("SupplierID");

                entity.Property(e => e.SupplierName).HasMaxLength(300);

                entity.Property(e => e.SupplierTypeId).HasMaxLength(50);

                entity.Property(e => e.Tin).HasMaxLength(100);

                entity.Property(e => e.Url)
                    .HasMaxLength(150)
                    .HasColumnName("URL");

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");

                entity.Property(e => e.VatRegNo).HasMaxLength(100);
            });

            modelBuilder.Entity<TbDefVendorInformation>(entity =>
            {
                entity.HasKey(e => e.VendorId)
                    .HasName("PK__TB_Def_V__FC8618D35D26C4CD");

                entity.ToTable("TB_Def_VendorInformation");

                entity.Property(e => e.VendorId)
                    .HasMaxLength(50)
                    .HasColumnName("VendorID");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("AutoID");

                entity.Property(e => e.City).HasMaxLength(100);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.CountryId).HasMaxLength(100);

                entity.Property(e => e.Cpid)
                    .HasMaxLength(200)
                    .HasColumnName("CPID");

                entity.Property(e => e.Email).HasMaxLength(50);

                entity.Property(e => e.Fax)
                    .HasMaxLength(150)
                    .HasColumnName("FAX");

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.Name).HasMaxLength(100);

                entity.Property(e => e.OpeningBalance).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Phone).HasMaxLength(50);

                entity.Property(e => e.StateOrProvince).HasMaxLength(100);

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");

                entity.Property(e => e.VatRegNo).HasMaxLength(100);

                entity.Property(e => e.Website).HasMaxLength(200);

                entity.Property(e => e.ZipCode).HasMaxLength(50);
            });

            modelBuilder.Entity<TblReportFormat>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbl_ReportFormat");

                entity.Property(e => e.EntryDate)
                    .HasColumnType("datetime")
                    .HasColumnName("entryDate");

                entity.Property(e => e.FormatId)
                    .HasMaxLength(50)
                    .HasColumnName("formatID");

                entity.Property(e => e.FormatName)
                    .HasMaxLength(50)
                    .HasColumnName("formatName");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.ModifyDate)
                    .HasColumnType("datetime")
                    .HasColumnName("modifyDate");
            });

            modelBuilder.Entity<TbmTransportBookingReceived>(entity =>
            {
                entity.HasKey(e => e.TbreceiveNo)
                    .HasName("PK__TBM_Tran__CF134B8D0C93269E");

                entity.ToTable("TBM_TransportBookingReceived");

                entity.Property(e => e.TbreceiveNo)
                    .HasMaxLength(50)
                    .HasColumnName("TBReceiveNO");

                entity.Property(e => e.ApprovalDateTime).HasColumnType("datetime");

                entity.Property(e => e.BookingType).HasMaxLength(50);

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.CustomerId)
                    .HasMaxLength(50)
                    .HasColumnName("CustomerID");

                entity.Property(e => e.IsBillSubmited)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IsMailSent).HasMaxLength(10);

                entity.Property(e => e.IsTrackingComplete)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IsTransportInfoAdded)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IsVendorAdded)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IscustomerApprove)
                    .HasMaxLength(50)
                    .HasColumnName("ISCustomerApprove");

                entity.Property(e => e.Ldate)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(90)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(150)
                    .HasColumnName("LMAC");

                entity.Property(e => e.LoginEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("LoginEmployeeID");

                entity.Property(e => e.Luser)
                    .HasMaxLength(90)
                    .HasColumnName("LUser");

                entity.Property(e => e.OrderStatus).HasMaxLength(50);

                entity.Property(e => e.TbreceivedDateTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TBReceivedDateTime");

                entity.Property(e => e.Tc)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TC");

                entity.Property(e => e.TranspotInfoAddedDateTime).HasColumnType("datetime");

                entity.Property(e => e.VendorAddedDateTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<TbmTransportBookingReceivedDetails>(entity =>
            {
                entity.HasKey(e => e.Tc)
                    .HasName("PK__TBM_Tran__3214E4085956D81D");

                entity.ToTable("TBM_TransportBookingReceivedDetails");

                entity.Property(e => e.Tc)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TC");

                entity.Property(e => e.CustomerModifiedRate).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ExportDropOfId)
                    .HasMaxLength(50)
                    .HasColumnName("ExportDropOfID");

                entity.Property(e => e.ExportPickupId)
                    .HasMaxLength(50)
                    .HasColumnName("ExportPickupID");

                entity.Property(e => e.ImportDropOfId)
                    .HasMaxLength(50)
                    .HasColumnName("ImportDropOfID");

                entity.Property(e => e.ImportPickupId)
                    .HasMaxLength(50)
                    .HasColumnName("ImportPickupID");

                entity.Property(e => e.LoadingDateTime).HasColumnType("datetime");

                entity.Property(e => e.LocalDropOfId)
                    .HasMaxLength(50)
                    .HasColumnName("LocalDropOfID");

                entity.Property(e => e.LocalPickupId)
                    .HasMaxLength(50)
                    .HasColumnName("LocalPickupID");

                entity.Property(e => e.Rate).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ShadeId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ShadeID");

                entity.Property(e => e.SlNo).HasMaxLength(50);

                entity.Property(e => e.TbreceiveNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("TBReceiveNO");

                entity.Property(e => e.TransportTypeId)
                    .HasMaxLength(50)
                    .HasColumnName("TransportTypeID");

                entity.Property(e => e.VendorId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("VendorID");

                entity.Property(e => e.VendorRate).HasColumnType("numeric(18, 2)");

                entity.HasOne(d => d.TbreceiveNoNavigation)
                    .WithMany(p => p.TbmTransportBookingReceivedDetails)
                    .HasForeignKey(d => d.TbreceiveNo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TBM_TransportBookingReceivedDetails_TBM");
            });

            modelBuilder.Entity<TbmTransportBookingReceivedReferenceDetails>(entity =>
            {
                entity.HasKey(e => e.AutoId)
                    .HasName("PK__TBM_Tran__6B23296505F64F0B");

                entity.ToTable("TBM_TransportBookingReceivedReferenceDetails");

                entity.Property(e => e.AutoId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("AutoID");

                entity.Property(e => e.CompanyCode).HasMaxLength(50);

                entity.Property(e => e.Ldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LDate");

                entity.Property(e => e.Lip)
                    .HasMaxLength(50)
                    .HasColumnName("LIP");

                entity.Property(e => e.Lmac)
                    .HasMaxLength(50)
                    .HasColumnName("LMAC");

                entity.Property(e => e.Luser)
                    .HasMaxLength(50)
                    .HasColumnName("LUser");

                entity.Property(e => e.ModifyDate).HasColumnType("datetime");

                entity.Property(e => e.ReferenceNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("ReferenceNO");

                entity.Property(e => e.ReferenceTypeId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("ReferenceTypeID");

                entity.Property(e => e.TbreceiveNo)
                    .HasMaxLength(100)
                    .HasColumnName("TBReceiveNO");

                entity.Property(e => e.UserInfoEmployeeId)
                    .HasMaxLength(50)
                    .HasColumnName("UserInfoEmployeeID");
            });

            modelBuilder.Entity<TbmTransportListDetails>(entity =>
            {
                entity.HasKey(e => e.Tltc)
                    .HasName("PK__TBM_Tran__A17283FFF2EE1378");

                entity.ToTable("TBM_TransportListDetails");

                entity.Property(e => e.Tltc)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TLTC");

                entity.Property(e => e.DemurrageCharge).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.DemurrageUnitChange).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.DriverName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DriverPhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LoadingCompleteTime).HasColumnType("datetime");

                entity.Property(e => e.LoadingPointArrivalTime).HasColumnType("datetime");

                entity.Property(e => e.SlNo).HasMaxLength(50);

                entity.Property(e => e.TbreceiveNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("TBReceiveNO");

                entity.Property(e => e.TbrslNo)
                    .HasMaxLength(50)
                    .HasColumnName("TBRSlNo");

                entity.Property(e => e.UnloadingCompleteTime).HasColumnType("datetime");

                entity.Property(e => e.UnloadingPointArrivalTime).HasColumnType("datetime");

                entity.Property(e => e.VehicleNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("VehicleNO");

                entity.Property(e => e.VenSlNo).HasMaxLength(50);

                entity.Property(e => e.VendorId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("VendorID");

                entity.Property(e => e.VncityName)
                    .HasMaxLength(50)
                    .HasColumnName("VNCityName");

                entity.Property(e => e.VnclassName)
                    .HasMaxLength(50)
                    .HasColumnName("VNClassName");

                entity.Property(e => e.VnfirstNumber)
                    .HasMaxLength(50)
                    .HasColumnName("VNFirstNumber");

                entity.Property(e => e.VnsecondNumber)
                    .HasMaxLength(50)
                    .HasColumnName("VNSecondNumber");
            });

            modelBuilder.Entity<TbmVendorAssignDetails>(entity =>
            {
                entity.HasKey(e => e.Vltc)
                    .HasName("PK__TBM_Vend__1607A229C9BEBFA4");

                entity.ToTable("TBM_VendorAssignDetails");

                entity.Property(e => e.Vltc)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("VLTC");

                entity.Property(e => e.Amount).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BillAmount).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.SlNo).HasMaxLength(50);

                entity.Property(e => e.TbreceiveNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("TBReceiveNO");

                entity.Property(e => e.TbrslNo)
                    .HasMaxLength(50)
                    .HasColumnName("TBRSlNo");

                entity.Property(e => e.VendorBillRate).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.VendorId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("VendorID");

                entity.Property(e => e.VendorRate).HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<TransportItemDetails>(entity =>
            {
                entity.Property(e => e.Cbm)
                    .HasMaxLength(50)
                    .HasColumnName("CBM");

                entity.Property(e => e.ItemDescription).HasMaxLength(50);

                entity.Property(e => e.TbreceiveNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("TBReceiveNO");

                entity.Property(e => e.UnitTypeId).HasMaxLength(50);

                entity.Property(e => e.VehicleNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("\r\n	[VehicleNo");

                entity.Property(e => e.Weight).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.WeightUnitTypeId).HasMaxLength(50);
            });

            modelBuilder.Entity<TransportMaterials>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Cbm)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("CBM");

                entity.Property(e => e.MaterialDescription).HasMaxLength(255);

                entity.Property(e => e.TbreceiveNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("TBReceiveNO");

                entity.Property(e => e.TransportId).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UnitTypeId).HasMaxLength(50);

                entity.Property(e => e.UnitTypeIdWeight).HasMaxLength(50);

                entity.Property(e => e.VehicleNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("\r\n	[VehicleNo");

                entity.Property(e => e.Weight).HasColumnType("decimal(18, 2)");
            });

            OnModelCreatingGeneratedProcedures(modelBuilder);
            OnModelCreatingGeneratedFunctions(modelBuilder);
            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}