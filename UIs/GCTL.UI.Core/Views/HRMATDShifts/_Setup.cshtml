@model GCTL.Core.ViewModels.HrmAtdShifts.HrmAtdShiftSetupViewModel

@{
    var isEditing = Model.AutoId > 0;
    var currentTime = DateTime.Now.ToString("hh:mm:ss tt");
}


@* <script>
    function updateCurrentTime() {
        const now = new Date();
        const formattedTime = now.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: true });

        document.getElementById('ShiftStartTime').value = formattedTime;
        document.getElementById('ShiftEndTime').value = formattedTime;
        document.getElementById('LateTime').value = formattedTime;
        document.getElementById('AbsentTime').value = formattedTime;
    }

    // Update time every second
    setInterval(updateCurrentTime, 1000);

    // Initialize time on page load
    updateCurrentTime();
</script> *@

<style>
   
    .TimePicker
    {
        font-size: 16px; 
      /*   font-weight: bold;  */
    }

    .time-with-spaces
    {
        letter-spacing: 1px;
    }
</style>

<div style="padding-top: 10px;">
    <div class="row">
        <div class="col-lg-6">
            <span id="message"></span>
        </div>
        <div class="col-lg-6">
        </div>
    </div>
    <div class="form-group row">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <input type="hidden" id="lastCode" />
        <input type="hidden" asp-for="Id" />
        <input type="hidden" asp-for="Ldate" />
        <input type="hidden" asp-for="ModifyDate" />
        <input type="hidden" asp-for="AutoId" />
        <div class="col-lg-6">
            <label asp-for="ShiftTypeId"> Shift Type</label>
            <select asp-for="ShiftTypeId" id="ShiftTypeIdDD" class="form-control form-control-sm selectpicker" tabindex="1"
                    asp-items="@(ViewBag.ShiftTypeDD as SelectList)">
                <option value="">--Select Shift Type--</option>
            </select>

        </div>
    </div>
    <div class="form-group row">

        <div class="col-lg-6">
            <label asp-for="ShiftCode">Shift Id</label>
            <input asp-for="ShiftCode" type="text" class="form-control form-control-sm js-ShiftCode-code" readonly="readonly" />
        </div>

        <div class="col-lg-6">
            <label asp-for="ShiftName">Shift Name<span style="color:red">*</span> </label>
            <input type="text" asp-for="ShiftName" class="form-control form-control-sm js-hRMATDShifts-check-duplicateName" autofocus placeholder="Enter Shift Name" tabindex="2" />

        </div>
     
    </div>

    <div class="form-group row">

        <div class="col-lg-6">
            <label asp-for="Description">Description</label>
            <input type="text" asp-for="Description" class="form-control form-control-sm " placeholder="Enter Description " tabindex="3" />
        </div>

        <div class="col-lg-6">
            <label asp-for="ShiftStartTime">In Time </label>
            <span class="text-danger"></span>
           
            <input type="text" value="@(isEditing ? Model.ShiftStartTime.ToString("hh:mm:ss tt") : currentTime)" class="form-control form-control-sm TimePicker" asp-for="ShiftStartTime" tabindex="4" />
        </div>
     
          
    </div>

    <div class="form-group row">
       
        <div class="col-lg-6">   
            <label asp-for="ShiftEndTime">Out Time </label>
            <span class="text-danger"></span>

            <input type="text" value="@(isEditing ? Model.ShiftEndTime.ToString("hh:mm:ss tt") : currentTime)" asp-for="ShiftEndTime" class="form-control large-font-time  form-control-sm TimePicker" tabindex="5" />
        </div>

        <div class="col-lg-6">

            <label asp-for="LateTime">LateTime </label>
            <span class="text-danger"></span>
            <input type="text" value="@(isEditing ? Model.LateTime.ToString("hh:mm:ss tt") : currentTime)" class="form-control form-control-sm TimePicker" asp-for="LateTime" tabindex="6">

        </div>
    </div>

    <div class="form-group row">
       
        
        <div class="col-lg-6">
            <label asp-for="AbsentTime">Absent Time </label>
            <span class="text-danger"></span>
            <input class="form-control form-control-sm TimePicker" value="@(isEditing ? Model.AbsentTime.ToString("hh:mm:ss tt") : currentTime)" type="datetime" asp-for="AbsentTime"  tabindex="7" />

        </div>
        <div class="col-lg-6">
            <label asp-for="Wef">W.E.F <span style="color:red">*</span> </label>
             <input type="hidden" id="WefHidden" name="Wef" />
           <input type="text" id="WefDate" placeholder="dd/MM/yyyy"   asp-for="Wef"  class="form-control form-control-sm datepicker"  tabindex="7" />
          
        </div>
    </div>



    <div class="form-group row">
   
        <div class="col-lg-12">
            <label asp-for="Remarks">Remarks </label>

            <textarea type="text" class="form-control form-control-sm" placeholder="Enter  Remarks" asp-for="Remarks" tabindex="9" rows="2"></textarea>

            <span asp-validation-for="Remarks" class="text-danger"></span>
        </div>
    </div>


    @if (Model.AutoId > 0)
    {
        <hr />
        <div class="form-group row" id="LdateModifyHide">
            <div class="col-lg-6">
                @if (Model.Ldate.HasValue)
                {
                    <label>Creation Date: </label>

                    <label>@Model.Ldate?.ToString("dd/MM/yyyy")</label>
                }
            </div>
            <div class="col-lg-6">
                @if (Model.ModifyDate.HasValue)
                {
                    <label>Last Update Date: </label>

                    <label>@Model.ModifyDate?.ToString("dd/MM/yyyy")</label>
                }
            </div>
        </div>
    }

</div>
<div class="row no-print" style="margin-top: 9px;">
    <div class="col-12">
        <button type="button" class="btn btn-default success-btn btn btn-outline-success btn-common btn-circle float-right js-hRMATDShifts-save" data-id="@Model.ShiftCode ">
            <i class="fas fa-save"></i> Save
        </button>
    </div>
</div>


@* @if (!isEditing)
{
    <script>
        function updateCurrentTime() {
            const now = new Date();
            const formattedTime = now.toLocaleTimeString('en-US', {
                hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: true
            });

            document.getElementById('ShiftStartTime').value = formattedTime;
            document.getElementById('ShiftEndTime').value = formattedTime;
            document.getElementById('LateTime').value = formattedTime;
            document.getElementById('AbsentTime').value = formattedTime;
        }

        setInterval(updateCurrentTime, 1000); // Update every second
        updateCurrentTime(); // Initial call
    </script>
} *@

